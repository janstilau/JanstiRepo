//
//  DoublePointer.swift
//  CartoonSwift
//
//  Created by JustinLau on 2020/6/27.
//  Copyright © 2020 JustinLau. All rights reserved.
//

import Foundation

/*
 在上一章中，我们通过迭代数组来解决一些问题。通常，我们只需要一个指针进行迭代，即从数组中的第一个元素开始，最后一个元素结束。然而，有时我们会使用两个指针进行迭代。
 
 让我们从一个经典问题开始：

 反转数组中的元素。比如数组为 ['l', 'e', 'e', 't', 'c', 'o', 'd', 'e']，反转之后变为 ['e', 'd', 'o', 'c', 't', 'e', 'e', 'l']。

 使用双指针技巧，其思想是分别将两个指针分别指向数组的开头及末尾，然后将其指向的元素进行交换，再将指针向中间移动一步，继续交换，直到这两个指针相遇。
 
 我们来总结一下，使用双指针的典型场景之一是你想要

 从两端向中间迭代数组。

 这时你可以使用双指针技巧：

 一个指针从头部开始，而另一个指针从尾部开始。

 这种技巧经常再排序数组中使用。
 */
