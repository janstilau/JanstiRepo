<!DOCTYPE html>
<!-- saved from url=(0038)https://www.jianshu.com/p/8b76814b3663 -->
<html><!--<![endif]--><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  
  <meta http-equiv="X-UA-Compatible" content="IE=Edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0,user-scalable=no">

  <!-- Start of Baidu Transcode -->
  <meta http-equiv="Cache-Control" content="no-siteapp">
  <meta http-equiv="Cache-Control" content="no-transform">
  <meta name="applicable-device" content="pc,mobile">
  <meta name="MobileOptimized" content="width">
  <meta name="HandheldFriendly" content="true">
  <meta name="mobile-agent" content="format=html5;url=https://www.jianshu.com/p/8b76814b3663">
  <!-- End of Baidu Transcode -->

    <meta name="description" content="原文链接 : The official raywenderlich.com Objective-C style guide 原文作者 : raywenderlich.com Team 译文出自 : raywenderlich.com Objective-C编码规范 译者 : Sam Lau 在多人开发同一个app时，如果每个人的Objective-C编码风格都不一样，这样不易于保持代码一致性...">

  <meta name="360-site-verification" content="604a14b53c6b871206001285921e81d8">
  <meta property="wb:webmaster" content="294ec9de89e7fadb">
  <meta property="qc:admins" content="104102651453316562112116375">
  <meta property="qc:admins" content="11635613706305617">
  <meta property="qc:admins" content="1163561616621163056375">
  <meta name="google-site-verification" content="cV4-qkUJZR6gmFeajx_UyPe47GW9vY6cnCrYtCHYNh4">
  <meta name="google-site-verification" content="HF7lfF8YEGs1qtCE-kPml8Z469e2RHhGajy6JPVy5XI">
  <meta http-equiv="mobile-agent" content="format=html5; url=https://www.jianshu.com/p/8b76814b3663">

  <!-- Apple -->
  <meta name="apple-mobile-web-app-title" content="简书">

    <!--  Meta for Smart App Banner -->
  <meta name="apple-itunes-app" content="app-id=888237539, app-argument=jianshu://notes/1530647">
  <!-- End -->

  <!--  Meta for Twitter Card -->
  <meta content="summary" property="twitter:card">
  <meta content="@jianshucom" property="twitter:site">
  <meta content="Objective-C编码规范[译]" property="twitter:title">
  <meta content="原文链接 : The official raywenderlich.com Objective-C style guide 原文作者 : raywenderlich.com ..." property="twitter:description">
  <meta content="https://www.jianshu.com/p/8b76814b3663" property="twitter:url">
  <!-- End -->

  <!--  Meta for OpenGraph -->
  <meta property="fb:app_id" content="865829053512461">
  <meta property="og:site_name" content="简书">
  <meta property="og:title" content="Objective-C编码规范[译]">
  <meta property="og:type" content="article">
  <meta property="og:url" content="https://www.jianshu.com/p/8b76814b3663">
  <meta property="og:description" content="原文链接 : The official raywenderlich.com Objective-C style guide 原文作者 : raywenderlich.com Team 译文出自 ...">
  <!-- End -->

  <!--  Meta for Facebook Applinks -->
  <meta property="al:ios:url" content="jianshu://notes/1530647">
  <meta property="al:ios:app_store_id" content="888237539">
  <meta property="al:ios:app_name" content="简书">

  <meta property="al:android:url" content="jianshu://notes/1530647">
  <meta property="al:android:package" content="com.jianshu.haruki">
  <meta property="al:android:app_name" content="简书">
  <!-- End -->


    <title>Objective-C编码规范[译] - 简书</title>

  <meta name="csrf-param" content="authenticity_token">
<meta name="csrf-token" content="VmmAyv51yrGqKBqU9nJN74x5ti6hW5fqhsBfvVjSx3n8PfabkExbkcPJ6TDZYtCwIbsxPNdg9TUf9b54mlBOhA==">

  <link rel="stylesheet" media="all" href="./OC 代码规范_files/web-d5108cec60c4ed55f041.css">
  
  <link rel="stylesheet" media="all" href="./OC 代码规范_files/entry-f1bfe3a5bcbd20b68049.css">

  <link href="https://cdn2.jianshu.io/assets/favicons/favicon-e743bfb1821442341c3ab15bdbe804f7ad97676bd07a770ccc9483473aa76f06.ico" rel="shortcut icon" type="image/x-icon">
      <link rel="apple-touch-icon-precomposed" href="https://cdn2.jianshu.io/assets/apple-touch-icons/57-a6f1f1ee62ace44f6dc2f6a08575abd3c3b163288881c78dd8d75247682a4b27.png" sizes="57x57">
      <link rel="apple-touch-icon-precomposed" href="https://cdn2.jianshu.io/assets/apple-touch-icons/72-fb9834bcfce738fd7b9c5e31363e79443e09a81a8e931170b58bc815387c1562.png" sizes="72x72">
      <link rel="apple-touch-icon-precomposed" href="https://cdn2.jianshu.io/assets/apple-touch-icons/76-49d88e539ff2489475d603994988d871219141ecaa0b1a7a9a1914f4fe3182d6.png" sizes="76x76">
      <link rel="apple-touch-icon-precomposed" href="https://cdn2.jianshu.io/assets/apple-touch-icons/114-24252fe693524ed3a9d0905e49bff3cbd0228f25a320aa09053c2ebb4955de97.png" sizes="114x114">
      <link rel="apple-touch-icon-precomposed" href="https://cdn2.jianshu.io/assets/apple-touch-icons/120-1bb7371f5e87f93ce780a5f1a05ff1b176828ee0d1d130e768575918a2e05834.png" sizes="120x120">
      <link rel="apple-touch-icon-precomposed" href="https://cdn2.jianshu.io/assets/apple-touch-icons/152-bf209460fc1c17bfd3e2b84c8e758bc11ca3e570fd411c3bbd84149b97453b99.png" sizes="152x152">

  <!-- Start of 访问统计 -->
    <script src="./OC 代码规范_files/push.js"></script><script src="./OC 代码规范_files/hm.js"></script><script>
    var _hmt = _hmt || [];
    (function() {
      var hm = document.createElement("script");
      hm.src = "//hm.baidu.com/hm.js?0c0e9d9b1e7d617b3e6842e85b9fb068";
      var s = document.getElementsByTagName("script")[0];
      s.parentNode.insertBefore(hm, s);
    })();
  </script>

  <!-- End of 访问统计 -->
<style type="text/css">@charset "UTF-8";.image-package .image-container{position:relative;z-index:2;background-color:#eee;-webkit-transition:background-color .1s linear;-o-transition:background-color .1s linear;transition:background-color .1s linear;margin:0 auto}body.reader-night-mode .image-package .image-container{background-color:#545454}.image-package .image-container-fill{z-index:1}.image-package .image-container .image-view{position:absolute;top:0;left:0;width:100%;height:100%;overflow:hidden}.image-package .image-container .image-view-error:after{content:"图片获取失败，请点击重试";position:absolute;top:50%;left:50%;width:100%;-webkit-transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);transform:translate(-50%,-50%);color:#888;font-size:14px}.image-package .image-container .image-view img.image-loading{opacity:.3}.image-package .image-container .image-view img{-webkit-transition:all .15s linear;-o-transition:all .15s linear;transition:all .15s linear;z-index:2;opacity:1}</style><style type="text/css">fieldset[disabled] .multiselect {
  pointer-events: none;
}

.multiselect__spinner {
  position: absolute;
  right: 1px;
  top: 1px;
  width: 48px;
  height: 35px;
  background: #fff;
  display: block;
}

.multiselect__spinner:after,
.multiselect__spinner:before {
  position: absolute;
  content: "";
  top: 50%;
  left: 50%;
  margin: -8px 0 0 -8px;
  width: 16px;
  height: 16px;
  border-radius: 100%;
  border-color: #41b883 transparent transparent;
  border-style: solid;
  border-width: 2px;
  box-shadow: 0 0 0 1px transparent;
}

.multiselect__spinner:before {
  animation: a 2.4s cubic-bezier(.41,.26,.2,.62);
  animation-iteration-count: infinite;
}

.multiselect__spinner:after {
  animation: a 2.4s cubic-bezier(.51,.09,.21,.8);
  animation-iteration-count: infinite;
}

.multiselect__loading-enter-active,
.multiselect__loading-leave-active {
  transition: opacity .4s ease-in-out;
  opacity: 1;
}

.multiselect__loading-enter,
.multiselect__loading-leave-active {
  opacity: 0;
}

.multiselect,
.multiselect__input,
.multiselect__single {
  font-family: inherit;
  font-size: 14px;
  -ms-touch-action: manipulation;
  touch-action: manipulation;
}

.multiselect {
  box-sizing: content-box;
  display: block;
  position: relative;
  width: 100%;
  min-height: 40px;
  text-align: left;
  color: #35495e;
}

.multiselect * {
  box-sizing: border-box;
}

.multiselect:focus {
  outline: none;
}

.multiselect--disabled {
  opacity: .6;
}

.multiselect--active {
  z-index: 1;
}

.multiselect--active:not(.multiselect--above) .multiselect__current,
.multiselect--active:not(.multiselect--above) .multiselect__input,
.multiselect--active:not(.multiselect--above) .multiselect__tags {
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
}

.multiselect--active .multiselect__select {
  transform: rotate(180deg);
}

.multiselect--above.multiselect--active .multiselect__current,
.multiselect--above.multiselect--active .multiselect__input,
.multiselect--above.multiselect--active .multiselect__tags {
  border-top-left-radius: 0;
  border-top-right-radius: 0;
}

.multiselect__input,
.multiselect__single {
  position: relative;
  display: inline-block;
  min-height: 20px;
  line-height: 20px;
  border: none;
  border-radius: 5px;
  background: #fff;
  padding: 0 0 0 5px;
  width: 100%;
  transition: border .1s ease;
  box-sizing: border-box;
  margin-bottom: 8px;
  vertical-align: top;
}

.multiselect__tag~.multiselect__input,
.multiselect__tag~.multiselect__single {
  width: auto;
}

.multiselect__input:hover,
.multiselect__single:hover {
  border-color: #cfcfcf;
}

.multiselect__input:focus,
.multiselect__single:focus {
  border-color: #a8a8a8;
  outline: none;
}

.multiselect__single {
  padding-left: 6px;
  margin-bottom: 8px;
}

.multiselect__tags-wrap {
  display: inline;
}

.multiselect__tags {
  min-height: 40px;
  display: block;
  padding: 8px 40px 0 8px;
  border-radius: 5px;
  border: 1px solid #e8e8e8;
  background: #fff;
}

.multiselect__tag {
  position: relative;
  display: inline-block;
  padding: 4px 26px 4px 10px;
  border-radius: 5px;
  margin-right: 10px;
  color: #fff;
  line-height: 1;
  background: #41b883;
  margin-bottom: 5px;
  white-space: nowrap;
  overflow: hidden;
  max-width: 100%;
  text-overflow: ellipsis;
}

.multiselect__tag-icon {
  cursor: pointer;
  margin-left: 7px;
  position: absolute;
  right: 0;
  top: 0;
  bottom: 0;
  font-weight: 700;
  font-style: normal;
  width: 22px;
  text-align: center;
  line-height: 22px;
  transition: all .2s ease;
  border-radius: 5px;
}

.multiselect__tag-icon:after {
  content: "\D7";
  color: #266d4d;
  font-size: 14px;
}

.multiselect__tag-icon:focus,
.multiselect__tag-icon:hover {
  background: #369a6e;
}

.multiselect__tag-icon:focus:after,
.multiselect__tag-icon:hover:after {
  color: #fff;
}

.multiselect__current {
  min-height: 40px;
  overflow: hidden;
  padding: 8px 12px 0;
  padding-right: 30px;
  white-space: nowrap;
  border-radius: 5px;
  border: 1px solid #e8e8e8;
}

.multiselect__current,
.multiselect__select {
  line-height: 16px;
  box-sizing: border-box;
  display: block;
  margin: 0;
  text-decoration: none;
  cursor: pointer;
}

.multiselect__select {
  position: absolute;
  width: 40px;
  height: 38px;
  right: 1px;
  top: 1px;
  padding: 4px 8px;
  text-align: center;
  transition: transform .2s ease;
}

.multiselect__select:before {
  position: relative;
  right: 0;
  top: 65%;
  color: #999;
  margin-top: 4px;
  border-style: solid;
  border-width: 5px 5px 0;
  border-color: #999 transparent transparent;
  content: "";
}

.multiselect__placeholder {
  color: #adadad;
  display: inline-block;
  margin-bottom: 10px;
  padding-top: 2px;
}

.multiselect--active .multiselect__placeholder {
  display: none;
}

.multiselect__content-wrapper {
  position: absolute;
  display: block;
  background: #fff;
  width: 100%;
  max-height: 240px;
  overflow: auto;
  border: 1px solid #e8e8e8;
  border-top: none;
  border-bottom-left-radius: 5px;
  border-bottom-right-radius: 5px;
  z-index: 1;
  -webkit-overflow-scrolling: touch;
}

.multiselect__content {
  list-style: none;
  display: inline-block;
  padding: 0;
  margin: 0;
  min-width: 100%;
  vertical-align: top;
}

.multiselect--above .multiselect__content-wrapper {
  bottom: 100%;
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
  border-top-left-radius: 5px;
  border-top-right-radius: 5px;
  border-bottom: none;
  border-top: 1px solid #e8e8e8;
}

.multiselect__content::webkit-scrollbar {
  display: none;
}

.multiselect__element {
  display: block;
}

.multiselect__option {
  display: block;
  padding: 12px;
  min-height: 40px;
  line-height: 16px;
  text-decoration: none;
  text-transform: none;
  vertical-align: middle;
  position: relative;
  cursor: pointer;
  white-space: nowrap;
}

.multiselect__option:after {
  top: 0;
  right: 0;
  position: absolute;
  line-height: 40px;
  padding-right: 12px;
  padding-left: 20px;
}

.multiselect__option--highlight {
  background: #41b883;
  outline: none;
  color: #fff;
}

.multiselect__option--highlight:after {
  content: attr(data-select);
  background: #41b883;
  color: #fff;
}

.multiselect__option--selected {
  background: #f3f3f3;
  color: #35495e;
  font-weight: 700;
}

.multiselect__option--selected:after {
  content: attr(data-selected);
  color: silver;
}

.multiselect__option--selected.multiselect__option--highlight {
  background: #ff6a6a;
  color: #fff;
}

.multiselect__option--selected.multiselect__option--highlight:after {
  background: #ff6a6a;
  content: attr(data-deselect);
  color: #fff;
}

.multiselect--disabled {
  background: #ededed;
  pointer-events: none;
}

.multiselect--disabled .multiselect__current,
.multiselect--disabled .multiselect__select,
.multiselect__option--disabled {
  background: #ededed;
  color: #a6a6a6;
}

.multiselect__option--disabled {
  cursor: text;
  pointer-events: none;
}

.multiselect__option--disabled.multiselect__option--highlight {
  background: #dedede!important;
}

.multiselect-enter-active,
.multiselect-leave-active {
  transition: all .15s ease;
}

.multiselect-enter,
.multiselect-leave-active {
  opacity: 0;
}

.multiselect__strong {
  margin-bottom: 8px;
  line-height: 20px;
  display: inline-block;
  vertical-align: top;
}

[dir=rtl] .multiselect {
  text-align: right;
}

[dir=rtl] .multiselect__select {
  right: auto;
  left: 1px;
}

[dir=rtl] .multiselect__tags {
  padding: 8px 8px 0 40px;
}

[dir=rtl] .multiselect__content {
  text-align: right;
}

[dir=rtl] .multiselect__option:after {
  right: auto;
  left: 0;
}

[dir=rtl] .multiselect__clear {
  right: auto;
  left: 12px;
}

[dir=rtl] .multiselect__spinner {
  right: auto;
  left: 1px;
}

@keyframes a {
  0% {
    transform: rotate(0);
  }

  to {
    transform: rotate(2turn);
  }
}</style><style type="text/css">
#free-reward-panel .reward-users-modal main {
  padding: 0;
}
</style><style type="text/css">
@charset "UTF-8";
/*
 * 变量
*/
.reward-note-modal .v-modal {
  width: 620px;
  text-align: center;
}
.reward-note-modal .v-modal form {
    margin: 0 auto 25px auto;
    padding: 0 40px;
}
.reward-note-modal .v-modal .reward-intro {
    margin-top: 20px;
    margin-bottom: 20px;
    font-size: 16px;
}
.reward-note-modal .v-modal .reward-intro .avatar {
      cursor: default !important;
      width: 36px;
      height: 36px;
      margin-right: 10px;
      display: inline-block;
}
.reward-note-modal .v-modal .reward-intro .intro {
      margin-right: 5px;
      font-weight: bold;
      vertical-align: middle;
}
.reward-note-modal .v-modal .reward-intro i {
      color: #EA6F5A;
      vertical-align: middle;
}
.reward-note-modal .v-modal .main-inputs {
    margin: 25px 0;
}
.reward-note-modal .v-modal .main-inputs .amount-group {
      margin: 0 -5px;
}
.reward-note-modal .v-modal .main-inputs .amount-group input {
        display: none;
}
.reward-note-modal .v-modal .main-inputs .amount-group input:checked + .option {
        color: #EA6F5A;
        border-color: #EA6F5A;
}
.reward-note-modal .v-modal .main-inputs .amount-group .custom-amount:checked + .option .custom-text {
        opacity: 0;
}
.reward-note-modal .v-modal .main-inputs .amount-group .custom-amount:checked + .option .custom-amount-input {
        opacity: 1;
}
.reward-note-modal .v-modal .main-inputs .amount-group .option {
        position: relative;
        margin: 0 5px 15px;
        width: 156px;
        height: 56px;
        line-height: 54px;
        border: 1px solid #E6E6E6;
        border-radius: 4px;
        font-weight: normal;
        color: #999999;
        cursor: pointer;
}
.reward-note-modal .v-modal .main-inputs .amount-group .option i {
          font-size: 16px;
          vertical-align: middle;
}
.reward-note-modal .v-modal .main-inputs .amount-group .option .amount {
          font-size: 28px;
          vertical-align: middle;
}
.reward-note-modal .v-modal .main-inputs .amount-group .option .piece {
          font-size: 13px;
          vertical-align: sub;
}
.reward-note-modal .v-modal .main-inputs .amount-group .option .custom-amount-input {
          position: absolute;
          top: 0;
          z-index: -1;
          width: 100%;
          opacity: 0;
}
.reward-note-modal .v-modal .main-inputs .amount-group .option .custom-amount-input i {
            position: absolute;
            top: 0;
            left: 10px;
}
.reward-note-modal .v-modal .main-inputs .amount-group .option .custom-amount-input .piece {
            position: absolute;
            top: 4px;
            right: 10px;
}
.reward-note-modal .v-modal .main-inputs .amount-group .option .custom-amount-input input {
            display: block;
            margin: 0 auto;
            width: 80px;
            height: 54px;
            line-height: 54px;
            border: none;
            font-size: 28px;
            text-align: center;
            background: transparent;
            -moz-appearance: textfield;
}
.reward-note-modal .v-modal .main-inputs .amount-group .option .custom-amount-input input::-webkit-outer-spin-button, .reward-note-modal .v-modal .main-inputs .amount-group .option .custom-amount-input input::-webkit-inner-spin-button {
              -webkit-appearance: none !important;
}
.reward-note-modal .v-modal .main-inputs .message {
      padding: 15px 20px;
      margin-bottom: 0;
      font-size: 14px;
      border: 1px solid #E6E6E6;
      color: #333333;
      border-radius: 4px;
      background-color: rgba(180, 180, 180, 0.1);
}
.reward-note-modal .v-modal .main-inputs .message textarea {
        width: 100%;
        height: 44px;
        padding: 0;
        margin: 0;
        resize: none;
        background: none !important;
        border: none !important;
        -webkit-box-sizing: border-box;
                box-sizing: border-box;
        -webkit-box-shadow: none;
                box-shadow: none;
}
.reward-note-modal .v-modal .main-inputs .message textarea:focus {
          outline: none;
}
.reward-note-modal .v-modal .reward-info .amount {
    font-size: 28px;
    font-weight: bold;
    color: #EA6F5A;
}
.reward-note-modal .v-modal .reward-info .pay-method {
    font-size: 14px;
}
.reward-note-modal .v-modal .reward-info .pay-method a {
      color: #3194D0;
}
.reward-note-modal .v-modal .choose-pay {
    margin: 0 -5px;
}
.reward-note-modal .v-modal .choose-pay input {
      display: none;
}
.reward-note-modal .v-modal .choose-pay input:checked + .option {
      color: #EA6F5A;
      border-color: #EA6F5A;
}
.reward-note-modal .v-modal .choose-pay .option {
      margin: 20px 5px 10px;
      width: 156px;
      height: 56px;
      line-height: 54px;
      text-align: center;
      border: 1px solid #E6E6E6;
      border-radius: 4px;
      cursor: pointer;
}
.reward-note-modal .v-modal .choose-pay .option img {
        height: 30px;
}
.reward-note-modal .v-modal .choose-pay .option img.day.alipay, .reward-note-modal .v-modal .choose-pay .option img.night.alipay {
        min-width: 85px;
}
.reward-note-modal .v-modal .choose-pay .option img.day.wechat, .reward-note-modal .v-modal .choose-pay .option img.night.wechat {
        min-width: 112px;
}
.reward-note-modal .v-modal .choose-pay .option img.night {
        display: none;
}
.reward-note-modal .v-modal .choose-pay .tooltip {
      width: 230px;
}
.reward-note-modal .v-modal .modal-footer {
    padding: 0 15px 20px;
    border: none;
    background-color: transparent;
    text-align: center;
}
.reward-note-modal .v-modal .modal-footer .btn {
      padding: 8px 45px;
      font-size: 24px;
}
.reward-note-modal .v-modal .btn-pay {
    padding: 8px 25px;
    font-size: 16px;
    color: #ffffff;
    background-color: #F5A623;
}
.weixin-pay, .success-pay {
  text-align: center;
}
.weixin-pay .v-modal, .success-pay .v-modal {
    width: 350px;
}
.weixin-pay .ic-successed, .success-pay .ic-successed {
    font-size: 60px;
    color: #3db922;
}
.weixin-pay h2, .weixin-pay h3, .success-pay h2, .success-pay h3 {
    margin-bottom: 20px;
    color: #333333;
}
.weixin-pay h2, .success-pay h2 {
    margin: 0 0 40px 0;
    font-size: 24px;
}
.weixin-pay .bind-text, .success-pay .bind-text {
    position: relative;
    margin-bottom: 30px;
    font-size: 14px;
    color: #999999;
}
.weixin-pay .bind-text:before, .weixin-pay .bind-text:after, .success-pay .bind-text:before, .success-pay .bind-text:after {
      content: "";
      border-top: 1px solid #999;
      display: block;
      position: absolute;
      width: 40px;
      top: 8px;
}
.weixin-pay .bind-text:before, .success-pay .bind-text:before {
      left: 30px;
}
.weixin-pay .bind-text:after, .success-pay .bind-text:after {
      right: 30px;
}
.weixin-pay .share-bind, .success-pay .share-bind {
    display: block;
    margin-bottom: 30px;
}
.weixin-pay .share-bind i, .success-pay .share-bind i {
      margin-right: 4px;
      font-size: 22px;
      vertical-align: middle;
}
.weixin-pay .share-bind.wechat i, .success-pay .share-bind.wechat i {
      color: #00BB29;
}
.weixin-pay .share-bind.weibo i, .success-pay .share-bind.weibo i {
      color: #E05244;
}
.weixin-pay .wx-qr-code, .success-pay .wx-qr-code {
    display: inline-block;
}
.weixin-pay .wx-qr-code img, .success-pay .wx-qr-code img {
      margin: 0 auto;
      padding: 10px;
      width: 200px;
      background-color: #ffffff;
}
.weixin-pay .pay-amount, .success-pay .pay-amount {
    margin: 20px 0;
    color: #787878;
}
.weixin-pay .pay-amount span, .success-pay .pay-amount span {
      color: #F5A623;
}
</style><style type="text/css">
@charset "UTF-8";
/*
 * 变量
*/
.v-modal-wrap {
  position: fixed;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
  z-index: 9999;
  background-color: transparent;
}
.v-modal-wrap.modal-leave-active {
    -webkit-transition: opacity 0.3s;
    -o-transition: opacity 0.3s;
    transition: opacity 0.3s;
}
.v-modal-wrap.modal-enter-active .v-modal-mask, .v-modal-wrap.modal-leave-active .v-modal-mask {
    opacity: 0;
}
.v-modal-wrap.modal-enter-active .v-modal, .v-modal-wrap.modal-leave-active .v-modal {
    -webkit-transform: translate(-50%, -70%);
        -ms-transform: translate(-50%, -70%);
            transform: translate(-50%, -70%);
    opacity: 0;
}
.v-modal-wrap .v-modal-mask {
    background-color: rgba(255, 255, 255, 0.7);
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    -webkit-transition: opacity 0.3s;
    -o-transition: opacity 0.3s;
    transition: opacity 0.3s;
    opacity: 1;
}
.v-modal-wrap .v-modal {
    position: absolute;
    left: 50%;
    top: 50%;
    -webkit-transform: translate(-50%, -50%);
        -ms-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%);
    border-radius: 6px;
    border: 1px solid rgba(0, 0, 0, 0.1);
    background-color: #fff;
    -webkit-box-shadow: 0 5px 25px rgba(0, 0, 0, 0.1);
            box-shadow: 0 5px 25px rgba(0, 0, 0, 0.1);
    -webkit-transition: opacity 0.3s, -webkit-transform 0.3s;
    transition: opacity 0.3s, -webkit-transform 0.3s;
    -o-transition: opacity 0.3s, transform 0.3s;
    transition: opacity 0.3s, transform 0.3s;
    transition: opacity 0.3s, transform 0.3s, -webkit-transform 0.3s;
    opacity: 1;
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -webkit-flex-direction: column;
        -ms-flex-direction: column;
            flex-direction: column;
    overflow: hidden;
}
.v-modal-wrap .v-modal > header:before, .v-modal-wrap .v-modal > header:after, .v-modal-wrap .v-modal > main:before, .v-modal-wrap .v-modal > main:after, .v-modal-wrap .v-modal > footer:before, .v-modal-wrap .v-modal > footer:after {
      content: '';
      clear: both;
      display: table;
}
.v-modal-wrap .v-modal > header {
      padding: 20px;
      border-bottom: 1px solid #F0F0F0;
}
.v-modal-wrap .v-modal > header h4 {
        margin: 0;
        color: #333;
        text-align: left;
}
.v-modal-wrap .v-modal .close {
      position: absolute;
      right: 16px;
      top: 20px;
      font-size: 26px;
      line-height: 20px;
      color: rgba(0, 0, 0, 0.8);
}
.v-modal-wrap .v-modal .close:hover {
        color: #000000;
}
.v-modal-wrap .v-modal > main {
      padding: 20px 20px 20px 20px;
      font-size: 15px;
      color: #333;
      -webkit-box-flex: 1;
      -webkit-flex-grow: 1;
          -ms-flex-positive: 1;
              flex-grow: 1;
      overflow-x: hidden;
      overflow-y: auto;
}
.v-modal-wrap .v-modal > footer {
      padding: 20px;
      background-color: #fff;
}
.v-modal-wrap .v-modal > footer button {
        padding: 0;
        margin: 0;
        background-color: transparent;
        border: 0;
        float: right;
}
.v-modal-wrap .v-modal > footer button:focus {
          outline: 0;
}
.v-modal-wrap .v-modal > footer .submit {
        padding: 4px 12px;
        border: 1px solid;
        border-radius: 20px;
}
.v-modal-wrap .v-modal > footer .cancel {
        margin-top: 5px;
}
.v-modal-wrap .v-modal > footer .cancel:hover {
          color: #333333;
}
.reader-night-mode .v-modal-wrap .v-modal-mask {
  background-color: rgba(63, 63, 63, 0.7);
}
.reader-night-mode .v-modal-wrap .v-modal {
  background-color: #3f3f3f;
}
.reader-night-mode .v-modal-wrap .v-modal header {
    border-color: #2F2F2F;
}
.reader-night-mode .v-modal-wrap .v-modal header h4 {
      color: #C8C8C8;
}
.reader-night-mode .v-modal-wrap .v-modal .close {
    color: #C8C8C8;
}
.reader-night-mode .v-modal-wrap .v-modal .close:hover {
      color: #ffffff;
}
.reader-night-mode .v-modal-wrap .v-modal main {
    color: #C8C8C8;
}
.reader-night-mode .v-modal-wrap .v-modal footer {
    background-color: #3f3f3f;
}
.reader-night-mode .v-modal-wrap .v-modal footer .cancel:hover {
      color: #C8C8C8;
}
</style><style type="text/css">
@charset "UTF-8";
/*
 * 变量
*/
.like[data-v-6ddd02c6] {
  display: inline-block;
}
.like .like-group[data-v-6ddd02c6] {
    position: relative;
    padding: 13px 0 15px 0;
    font-size: 0;
    border: 1px solid #EA6F5A;
    border-radius: 40px;
}
.like .like-group[data-v-6ddd02c6]:hover {
      background-color: rgba(236, 97, 73, 0.05);
}
.like .like-group .btn-like[data-v-6ddd02c6] {
      display: inline-block;
      font-size: 19px;
}
.like .like-group .btn-like[data-v-6ddd02c6]:before {
        content: '';
        position: absolute;
        left: 12px;
        top: 2px;
        width: 50px;
        height: 50px;
        background-image: url(//cdn2.jianshu.io/assets/web/like_animation_steps-62a00a7b52377d3069927cdb8e61fd34.png);
        background-position: left;
        background-repeat: no-repeat;
        background-size: 1000px 50px;
}
.like .like-group .btn-like a[data-v-6ddd02c6] {
        position: relative;
        padding: 18px 30px 18px 55px;
        color: #EA6F5A;
}
.like .like-group .modal-wrap[data-v-6ddd02c6] {
      font-size: 18px;
      border-left: 1px solid rgba(236, 97, 73, 0.4);
      display: inline-block;
      margin-left: -15px;
}
.like .like-group .modal-wrap a[data-v-6ddd02c6] {
        color: #EA6F5A;
        padding: 18px 26px 18px 18px;
}
.like .like-group.like-animation[data-v-6ddd02c6], .like .like-group.active[data-v-6ddd02c6] {
      background-color: #EA6F5A;
}
.like .like-group.like-animation .btn-like a[data-v-6ddd02c6], .like .like-group.active .btn-like a[data-v-6ddd02c6] {
        color: white;
}
.like .like-group.like-animation .modal-wrap[data-v-6ddd02c6], .like .like-group.active .modal-wrap[data-v-6ddd02c6] {
        border-left: 1px solid white;
}
.like .like-group.like-animation .modal-wrap a[data-v-6ddd02c6], .like .like-group.active .modal-wrap a[data-v-6ddd02c6] {
          color: white;
}
.like .like-group.like-animation .btn-like[data-v-6ddd02c6]:before {
      -webkit-animation: likeBlast-data-v-6ddd02c6 0.6s 1 steps(19);
              animation: likeBlast-data-v-6ddd02c6 0.6s 1 steps(19);
      background-position: right;
}
@-webkit-keyframes likeBlast {
0% {
    background-position: left;
}
100% {
    background-position: right;
}
}
@keyframes likeBlast-data-v-6ddd02c6 {
0% {
    background-position: left;
}
100% {
    background-position: right;
}
}
.like .like-group.active .btn-like[data-v-6ddd02c6]:before {
      background-position: right;
}
</style><style type="text/css">
@charset "UTF-8";
/*
 * 变量
*/
.main {
  position: relative;
  margin: 0 auto;
  padding: 0 0 30px 0;
  width: 620px;
}
.main .title {
    padding-left: 8px;
    border-left: 3px solid #EA6F5A;
    line-height: 1;
    font-size: 15px;
}
.main .collection-settings {
    position: absolute;
    top: 2px;
    right: 0;
    font-size: 13px;
    color: #A0A0A0;
}
.main .collection-settings span {
      padding-left: 4px;
}
.main .include-collection {
    width: 100%;
    padding-top: 20px;
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
    -webkit-flex-direction: row;
        -ms-flex-direction: row;
            flex-direction: row;
    -webkit-box-pack: start;
    -webkit-justify-content: flex-start;
        -ms-flex-pack: start;
            justify-content: flex-start;
    -webkit-box-align: center;
    -webkit-align-items: center;
        -ms-flex-align: center;
            align-items: center;
    -webkit-flex-wrap: wrap;
        -ms-flex-wrap: wrap;
            flex-wrap: wrap;
}
.main .include-collection .item {
      display: inline-block;
      margin: 0 12px 12px 0;
      min-height: 32px;
      background-color: white;
      border: 1px solid #DCDCDC;
      border-radius: 4px;
      vertical-align: top;
      overflow: hidden;
}
.main .include-collection .item img {
        width: 32px;
        height: 32px;
}
.main .include-collection .item .name {
        display: inline-block;
        padding: 0 10px;
        font-size: 14px;
}
.main .include-collection .add-collection-wrap {
      margin: 0 12px 12px 0;
}
.main .include-collection .add-collection {
      padding: 8px 12px;
      font-size: 14px;
      border: 1px solid #DCDCDC;
      border-radius: 4px;
}
.main .include-collection .add-collection i {
        margin-right: 4px;
        color: #969696;
}
.main .recommend-note a {
    position: relative;
    margin: 20px 2px 0 0;
    width: 200px;
    height: 160px;
    display: inline-block;
}
.main .recommend-note a:after {
      content: "";
      position: absolute;
      width: 200px;
      height: 160px;
      border-radius: 0 0 4px 4px;
      -webkit-box-shadow: inset 0px -80px 50px -22px rgba(0, 0, 0, 0.6);
              box-shadow: inset 0px -80px 50px -22px rgba(0, 0, 0, 0.6);
      top: 0;
      left: 0;
      z-index: 1;
}
.main .recommend-note .name {
    position: absolute;
    bottom: 40px;
    left: 10px;
    right: 10px;
    font-size: 17px;
    font-weight: bold;
    color: #ffffff;
    z-index: 2;
}
.main .recommend-note .author {
    position: absolute;
    bottom: 10px;
    left: 10px;
    right: 10px;
    z-index: 2;
}
.main .recommend-note .avatar {
    width: 20px;
    height: 20px;
    display: inline-block;
}
.main .recommend-note .avatar img {
      border-radius: 50%;
}
.main .recommend-note .author-name {
    font-size: 12px;
    color: #ffffff;
    display: inline-block;
    vertical-align: -1px;
}
.main .show-more {
    margin: 0 12px 12px 0;
    font-size: 14px;
    color: #A0A0A0;
}
</style></head>

  <!-- 只给10%的用户添加代码 -->
  <body lang="zh-CN" class="reader-black-font">
    <!-- 全局顶部导航栏 -->
<nav class="navbar navbar-default navbar-fixed-top" role="navigation">
  <div class="width-limit">
    <!-- 左上方 Logo -->
    <a class="logo" href="https://www.jianshu.com/"><img src="./OC 代码规范_files/nav-logo-4c7bbafe27adc892f3046e6978459bac.png" alt="Nav logo"></a>

    <!-- 右上角 -->
      <!-- 未登录显示登录/注册/写文章 -->
      <a class="btn write-btn" target="_blank" href="https://www.jianshu.com/writer#/">
        <i class="iconfont ic-write"></i>写文章
</a>      <a class="btn sign-up" id="sign_up" href="https://www.jianshu.com/sign_up">注册</a>
      <a class="btn log-in" id="sign_in" href="https://www.jianshu.com/sign_in">登录</a>

    <!-- 如果用户登录，显示下拉菜单 -->

    <div class="style-mode"><a class="style-mode-btn"><i class="iconfont ic-navigation-mode"></i></a> <div class="popover-modal" style="left: 0px; display: none;"><div class="meta"><i class="iconfont ic-navigation-night"></i><span>夜间模式</span></div> <div class="switch day-night-group"><a class="switch-btn">开</a> <a class="switch-btn active">关</a></div> <hr> <div class="switch font-family-group"><a class="switch-btn font-song">宋体</a> <a class="switch-btn font-hei active">黑体</a></div> <div class="switch"><a class="switch-btn active">简</a> <a class="switch-btn">繁</a></div></div></div>
    <div class="container">
      <div class="navbar-header">
        <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#menu" aria-expanded="false">
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
        </button>
      </div>
      <div class="collapse navbar-collapse" id="menu">
        <ul class="nav navbar-nav">
            <li class="tab ">
              <a href="https://www.jianshu.com/">
                <span class="menu-text">首页</span><i class="iconfont ic-navigation-discover menu-icon"></i>
</a>            </li>
            <li class="tab ">
              <a id="web-nav-app-download-btn" class="app-download-btn" href="https://www.jianshu.com/apps?utm_medium=desktop&amp;utm_source=navbar-apps"><span class="menu-text">下载App</span><i class="iconfont ic-navigation-download menu-icon"></i></a>
            </li>
          <li class="search">
            <form target="_blank" action="https://www.jianshu.com/search" accept-charset="UTF-8" method="get"><input name="utf8" type="hidden" value="✓">
              <input type="text" name="q" id="q" value="" autocomplete="off" placeholder="搜索" class="search-input">
              <a class="search-btn" href="javascript:void(null)"><i class="iconfont ic-search"></i></a>
</form>          </li>
        </ul>
      </div>
    </div>
  </div>
</nav>

    
<div class="note">
    <a target="_blank" href="https://www.jianshu.com/apps/redirect?utm_source=side-banner-click" id="web-note-ad-fixed"><span class="close">×</span></a>
  <div class="post">
    <div class="article">
        <h1 class="title">Objective-C编码规范[译]</h1>

        <!-- 作者区域 -->
        <div class="author">
          <a class="avatar" href="https://www.jianshu.com/u/256fb15baf75">
            <img src="./OC 代码规范_files/c1944515bfcf.jpg" alt="96">
</a>          <div class="info">
            <span class="name"><a href="https://www.jianshu.com/u/256fb15baf75">Sam_Lau</a></span>
            <!-- 关注用户按钮 -->
            <a class="btn btn-success follow"><i class="iconfont ic-follow"></i><span>关注</span></a>
            <!-- 文章数据信息 -->
            <div class="meta">
              <!-- 如果文章更新时间大于发布时间，那么使用 tooltip 显示更新时间 -->
                <span class="publish-time" data-toggle="tooltip" data-placement="bottom" title="" data-original-title="最后编辑于 2017.11.27 02:45">2015.06.01 13:42*</span>
              <span class="wordage">字数 3568</span>
            <span class="views-count">阅读 30597</span><span class="comments-count">评论 16</span><span class="likes-count">喜欢 158</span></div>
          </div>
          <!-- 如果是当前作者，加入编辑按钮 -->
        </div>


        <!-- 文章内容 -->
        <div data-note-content="" class="show-content">
          <div class="show-content-free">
            <blockquote>
<ul>
<li>原文链接 : <a href="https://link.jianshu.com/?t=https://github.com/raywenderlich/objective-c-style-guide#language" target="_blank" rel="nofollow">The official raywenderlich.com Objective-C style guide</a>
</li>
</ul>
</blockquote>
<ul>
<li>原文作者 : <a href="https://link.jianshu.com/?t=http://www.raywenderlich.com" target="_blank" rel="nofollow">raywenderlich.com Team</a>
</li>
<li>译文出自 : <a href="https://link.jianshu.com/?t=https://github.com/samlaudev/Objective-C-Coding-Style#error-handling" target="_blank" rel="nofollow">raywenderlich.com Objective-C编码规范</a>
</li>
<li>译者 : <a href="https://link.jianshu.com/?t=https://github.com/samlaudev" target="_blank" rel="nofollow">Sam Lau</a>
</li>
</ul>
<p>在多人开发同一个app时，如果每个人的Objective-C编码风格都不一样，这样不易于保持代码<strong>一致性</strong>和<strong>难以Code Review</strong>。所以我在网上搜索到 <a href="https://link.jianshu.com/?t=https://github.com/raywenderlich/objective-c-style-guide#language" target="_blank" rel="nofollow">The official raywenderlich.com Objective-C style guide</a>这篇关于Objective-C编码风格的文章，觉得可以作为这个项目的Objective-C的编码标准，所以就翻译这篇文章。</p>
<h1>raywenderlich.com Objective-C编码规范</h1>
<p>这篇编码风格指南概括了raywenderlich.com的编码规范，可能有些删减或修改。</p>
<h2>介绍</h2>
<p>我们制定Objective-C编码规范的原因是我们能够在我们的书，教程和初学者工具包的代码保持优雅和一致。即使我们有很多不同的作者来完成不同的书籍。</p>
<p>这里编码规范有可能与你看到的其他Objective-C编码规范不同，因为它主要是为了打印和web的易读性。</p>
<h2>关于作者</h2>
<p>这编码规范的创建是由很多来自raywenderlich.com团队成员在Nicholas Waynik的带领下共同完成的。团队成员有：<a href="https://link.jianshu.com/?t=https://github.com/moayes" target="_blank" rel="nofollow">Soheil Moayedi Azarpour</a>, <a href="https://link.jianshu.com/?t=https://github.com/ricardo-rendoncepeda" target="_blank" rel="nofollow">Ricardo Rendon Cepeda</a>, <a href="https://link.jianshu.com/?t=https://github.com/tdahbura" target="_blank" rel="nofollow">Tony Dahbura</a>, <a href="https://link.jianshu.com/?t=https://github.com/ColinEberhardt" target="_blank" rel="nofollow">Colin Eberhardt</a>, <a href="https://link.jianshu.com/?t=https://github.com/mattjgalloway" target="_blank" rel="nofollow">Matt Galloway</a>, <a href="https://link.jianshu.com/?t=https://github.com/gregheo" target="_blank" rel="nofollow">Greg Heo</a>, <a href="https://link.jianshu.com/?t=https://github.com/hollance" target="_blank" rel="nofollow">Matthijs Hollemans</a>, <a href="https://link.jianshu.com/?t=https://github.com/elephantronic" target="_blank" rel="nofollow">Christopher LaPollo</a>, <a href="https://link.jianshu.com/?t=https://github.com/casademora" target="_blank" rel="nofollow">Saul Mora</a>, <a href="https://link.jianshu.com/?t=https://github.com/macandyp" target="_blank" rel="nofollow">Andy Pereira</a>, <a href="https://link.jianshu.com/?t=https://github.com/micpringle" target="_blank" rel="nofollow">Mic Pringle</a>, <a href="https://link.jianshu.com/?t=https://github.com/pietrorea" target="_blank" rel="nofollow">Pietro Rea</a>, <a href="https://link.jianshu.com/?t=https://github.com/funkyboy" target="_blank" rel="nofollow">Cesare Rocchi</a>, <a href="https://link.jianshu.com/?t=https://github.com/icanzilb" target="_blank" rel="nofollow">Marin Todorov</a>, <a href="https://link.jianshu.com/?t=https://github.com/ndubbs" target="_blank" rel="nofollow">Nicholas Waynik</a>和<a href="https://link.jianshu.com/?t=https://github.com/raywenderlich" target="_blank" rel="nofollow">Ray Wenderlich</a></p>
<p>我们也非常感谢<a href="https://link.jianshu.com/?t=https://github.com/NYTimes/objective-c-style-guide" target="_blank" rel="nofollow">New York Times</a> 和<a href="https://link.jianshu.com/?t=https://github.com/RobotsAndPencils/objective-c-style-guide" target="_blank" rel="nofollow">Robots &amp; Pencils'</a>Objective-C编码规范的作者。这两个编码规范为本指南的创建提供很好的起点。</p>
<h2>背景</h2>
<p>这里有些关于编码风格Apple官方文档，如果有些东西没有提及，可以在以下文档来查找更多细节：</p>
<ul>
<li><a href="https://link.jianshu.com/?t=http://developer.apple.com/library/mac/#documentation/Cocoa/Conceptual/ObjectiveC/Introduction/introObjectiveC.html" target="_blank" rel="nofollow">The Objective-C Programming Language</a></li>
<li><a href="https://link.jianshu.com/?t=https://developer.apple.com/library/mac/#documentation/Cocoa/Conceptual/CocoaFundamentals/Introduction/Introduction.html" target="_blank" rel="nofollow">Cocoa Fundamentals Guide</a></li>
<li><a href="https://link.jianshu.com/?t=https://developer.apple.com/library/mac/#documentation/Cocoa/Conceptual/CodingGuidelines/CodingGuidelines.html" target="_blank" rel="nofollow">Coding Guidelines for Cocoa</a></li>
<li><a href="https://link.jianshu.com/?t=http://developer.apple.com/library/ios/#documentation/iphone/conceptual/iphoneosprogrammingguide/Introduction/Introduction.html" target="_blank" rel="nofollow">iOS App Programming Guide</a></li>
</ul>
<h2>目录</h2>
<ul>
<li><a href="https://www.jianshu.com/p/8b76814b3663#language" target="_blank">语言</a></li>
<li><a href="https://www.jianshu.com/p/8b76814b3663#code-organization" target="_blank">代码组织</a></li>
<li><a href="https://www.jianshu.com/p/8b76814b3663#spacing" target="_blank">空格</a></li>
<li><a href="https://www.jianshu.com/p/8b76814b3663#comments" target="_blank">注释</a></li>
<li>
<a href="https://www.jianshu.com/p/8b76814b3663#naming" target="_blank">命名</a>
<ul>
<li><a href="https://www.jianshu.com/p/8b76814b3663#underscores" target="_blank">下划线</a></li>
</ul>
</li>
<li><a href="https://www.jianshu.com/p/8b76814b3663#methods" target="_blank">方法</a></li>
<li><a href="https://www.jianshu.com/p/8b76814b3663#variables" target="_blank">变量</a></li>
<li><a href="https://www.jianshu.com/p/8b76814b3663#property-attributes" target="_blank">属性特性</a></li>
<li><a href="https://www.jianshu.com/p/8b76814b3663#dot-notation-syntax" target="_blank">点符号语法</a></li>
<li><a href="https://www.jianshu.com/p/8b76814b3663#literals" target="_blank">字面值</a></li>
<li><a href="https://www.jianshu.com/p/8b76814b3663#constants" target="_blank">常量</a></li>
<li><a href="https://www.jianshu.com/p/8b76814b3663#enumerated-types" target="_blank">枚举类型</a></li>
<li><a href="https://www.jianshu.com/p/8b76814b3663#case-statements" target="_blank">Case语句</a></li>
<li><a href="https://www.jianshu.com/p/8b76814b3663#private-properties" target="_blank">私有属性</a></li>
<li><a href="https://www.jianshu.com/p/8b76814b3663#booleans" target="_blank">布尔值</a></li>
<li>
<a href="https://www.jianshu.com/p/8b76814b3663#conditionals" target="_blank">条件语句</a>
<ul>
<li><a href="https://www.jianshu.com/p/8b76814b3663#ternary-operator" target="_blank">三元操作符</a></li>
</ul>
</li>
<li><a href="https://www.jianshu.com/p/8b76814b3663#init-methods" target="_blank">Init方法</a></li>
<li><a href="https://www.jianshu.com/p/8b76814b3663#class-constructor-methods" target="_blank">类构造方法</a></li>
<li><a href="https://www.jianshu.com/p/8b76814b3663#cgrect-functions" target="_blank">CGRect函数</a></li>
<li><a href="https://www.jianshu.com/p/8b76814b3663#golden-path" target="_blank">黄金路径</a></li>
<li><a href="https://www.jianshu.com/p/8b76814b3663#error-handling" target="_blank">错误处理</a></li>
<li><a href="https://www.jianshu.com/p/8b76814b3663#singletons" target="_blank">单例模式</a></li>
<li><a href="https://www.jianshu.com/p/8b76814b3663#line-breaks" target="_blank">换行符</a></li>
<li><a href="https://www.jianshu.com/p/8b76814b3663#xcode-project" target="_blank">Xcode工程</a></li>
</ul>
<p>&lt;b id="language"&gt;&lt;/b&gt;</p>
<h2>语言</h2>
<p>应该使用US英语.</p>
<p><strong>应该:</strong></p>
<pre class="hljs objectivec"><code class="objectivec"><span class="hljs-built_in">UIColor</span> *myColor = [<span class="hljs-built_in">UIColor</span> whiteColor];
</code></pre>
<p><strong>不应该:</strong></p>
<pre class="hljs objectivec"><code class="objectivec"><span class="hljs-built_in">UIColor</span> *myColour = [<span class="hljs-built_in">UIColor</span> whiteColor];
</code></pre>
<p>&lt;b id="code-organization"&gt;&lt;/b&gt;</p>
<h2>代码组织</h2>
<p>在函数分组和protocol/delegate实现中使用<code>#pragma mark -</code>来分类方法，要遵循以下一般结构：</p>
<pre class="hljs cpp"><code class="cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> mark - Lifecycle</span>

- (instancetype)init {}
- (<span class="hljs-keyword">void</span>)dealloc {}
- (<span class="hljs-keyword">void</span>)viewDidLoad {}
- (<span class="hljs-keyword">void</span>)viewWillAppear:(BOOL)animated {}
- (<span class="hljs-keyword">void</span>)didReceiveMemoryWarning {}

<span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> mark - Custom Accessors</span>

- (<span class="hljs-keyword">void</span>)setCustomProperty:(id)value {}
- (id)customProperty {}

<span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> mark - IBActions</span>

- (IBAction)submitData:(id)sender {}

<span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> mark - Public</span>

- (<span class="hljs-keyword">void</span>)publicMethod {}

<span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> mark - Private</span>

- (<span class="hljs-keyword">void</span>)privateMethod {}

<span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> mark - Protocol conformance</span>
<span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> mark - UITextFieldDelegate</span>
<span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> mark - UITableViewDataSource</span>
<span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> mark - UITableViewDelegate</span>

<span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> mark - NSCopying</span>

- (id)copyWithZone:(NSZone *)zone {}

<span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> mark - NSObject</span>

- (NSString *)description {}
</code></pre>
<p>&lt;b id="spacing"&gt;&lt;/b&gt;</p>
<h2>空格</h2>
<ul>
<li>缩进使用<strong>4</strong>个空格，确保在Xcode偏好设置来设置。(raywenderlich.com使用<strong>2</strong>个空格)</li>
<li>方法大括号和其他大括号(<code>if</code>/<code>else</code>/<code>switch</code>/<code>while</code> 等.)总是在同一行语句打开但在新行中关闭。</li>
</ul>
<p><strong>应该:</strong></p>
<pre class="hljs ruby"><code class="ruby"><span class="hljs-keyword">if</span> (user.isHappy) {
    <span class="hljs-regexp">//</span>Do something
} <span class="hljs-keyword">else</span> {
    <span class="hljs-regexp">//</span>Do something <span class="hljs-keyword">else</span>
}
</code></pre>
<p><strong>不应该:</strong></p>
<pre class="hljs ruby"><code class="ruby"><span class="hljs-keyword">if</span> (user.isHappy)
{
  <span class="hljs-regexp">//</span>Do something
}
<span class="hljs-keyword">else</span> {
  <span class="hljs-regexp">//</span>Do something <span class="hljs-keyword">else</span>
}
</code></pre>
<ul>
<li>在方法之间应该有且只有一行，这样有利于在视觉上更清晰和更易于组织。在方法内的空白应该分离功能，但通常都抽离出来成为一个新方法。</li>
<li>优先使用auto-synthesis。但如果有必要，<code>@synthesize</code> 和 <code>@dynamic</code>应该在实现中每个都声明新的一行。</li>
<li>应该避免以冒号对齐的方式来调用方法。因为有时方法签名可能有3个以上的冒号和冒号对齐会使代码更加易读。请<strong>不要</strong>这样做，尽管冒号对齐的方法包含代码块，因为Xcode的对齐方式令它难以辨认。</li>
</ul>
<p><strong>应该:</strong></p>
<pre class="hljs objectivec"><code class="objectivec"><span class="hljs-comment">// blocks are easily readable</span>
[<span class="hljs-built_in">UIView</span> animateWithDuration:<span class="hljs-number">1.0</span> animations:^{
  <span class="hljs-comment">// something</span>
} completion:^(<span class="hljs-built_in">BOOL</span> finished) {
  <span class="hljs-comment">// something</span>
}];
</code></pre>
<p><strong>不应该:</strong></p>
<pre class="hljs objectivec"><code class="objectivec"><span class="hljs-comment">// colon-aligning makes the block indentation hard to read</span>
[<span class="hljs-built_in">UIView</span> animateWithDuration:<span class="hljs-number">1.0</span>
                 animations:^{
                     <span class="hljs-comment">// something</span>
                 }
                 completion:^(<span class="hljs-built_in">BOOL</span> finished) {
                     <span class="hljs-comment">// something</span>
                 }];
</code></pre>
<p>&lt;b id="comments"&gt;&lt;/b&gt;</p>
<h2>注释</h2>
<p>当需要注释时，注释应该用来解释这段特殊代码<strong>为什么</strong>要这样做。任何被使用的注释都必须保持最新或被删除。</p>
<p>一般都避免使用块注释，因为代码尽可能做到自解释，只有当断断续续或几行代码时才需要注释。<em>例外：这不应用在生成文档的注释</em></p>
<p>&lt;b id="naming"&gt;&lt;/b&gt;</p>
<h2>命名</h2>
<p>Apple命名规则尽可能坚持，特别是与这些相关的<a href="https://link.jianshu.com/?t=https://developer.apple.com/library/mac/#documentation/Cocoa/Conceptual/MemoryMgmt/Articles/MemoryMgmt.html" target="_blank" rel="nofollow">memory management rules</a> (<a href="https://link.jianshu.com/?t=http://stackoverflow.com/a/2865194/340508" target="_blank" rel="nofollow">NARC</a>)。</p>
<p>长的，描述性的方法和变量命名是好的。</p>
<p><strong>应该:</strong></p>
<pre class="hljs objectivec"><code class="objectivec"><span class="hljs-built_in">UIButton</span> *settingsButton;
</code></pre>
<p><strong>不应该:</strong></p>
<pre class="hljs objectivec"><code class="objectivec"><span class="hljs-built_in">UIButton</span> *setBut;
</code></pre>
<p>三个字符前缀应该经常用在类和常量命名，但在Core Data的实体名中应被忽略。对于官方的raywenderlich.com书、初学者工具包或教程，前缀'RWT'应该被使用。</p>
<p>常量应该使用驼峰式命名规则，所有的单词首字母大写和加上与类名有关的前缀。</p>
<p><strong>应该:</strong></p>
<pre class="hljs objectivec"><code class="objectivec"><span class="hljs-keyword">static</span> <span class="hljs-built_in">NSTimeInterval</span> <span class="hljs-keyword">const</span> RWTTutorialViewControllerNavigationFadeAnimationDuration = <span class="hljs-number">0.3</span>;
</code></pre>
<p><strong>不应该:</strong></p>
<pre class="hljs objectivec"><code class="objectivec"><span class="hljs-keyword">static</span> <span class="hljs-built_in">NSTimeInterval</span> <span class="hljs-keyword">const</span> fadetime = <span class="hljs-number">1.7</span>;
</code></pre>
<p>属性也是使用驼峰式，但首单词的首字母小写。对属性使用auto-synthesis，而不是手动编写@ synthesize语句，除非你有一个好的理由。</p>
<p><strong>应该:</strong></p>
<pre class="hljs objectivec"><code class="objectivec"><span class="hljs-keyword">@property</span> (<span class="hljs-keyword">strong</span>, <span class="hljs-keyword">nonatomic</span>) <span class="hljs-built_in">NSString</span> *descriptiveVariableName;
</code></pre>
<p><strong>不应该:</strong></p>
<pre class="hljs objectivec"><code class="objectivec"><span class="hljs-keyword">id</span> varnm;
</code></pre>
<p>&lt;b id="underscores"&gt;&lt;/b&gt;</p>
<h3>下划线</h3>
<p>当使用属性时，实例变量应该使用<code>self.</code>来访问和改变。这就意味着所有属性将会视觉效果不同，因为它们前面都有<code>self.</code>。</p>
<p>但有一个特例：在初始化方法里，实例变量(例如，_variableName)应该直接被使用来避免getters/setters潜在的副作用。</p>
<p>局部变量不应该包含下划线。</p>
<p>&lt;b id="methods"&gt;&lt;/b&gt;</p>
<h2>方法</h2>
<p>在方法签名中，应该在方法类型(-/+ 符号)之后有一个空格。在方法各个段之间应该也有一个空格(符合Apple的风格)。在参数之前应该包含一个具有描述性的关键字来描述参数。</p>
<p>"and"这个词的用法应该保留。它不应该用于多个参数来说明，就像<code>initWithWidth:height</code>以下这个例子：</p>
<p><strong>应该:</strong></p>
<pre class="hljs objectivec"><code class="objectivec">- (<span class="hljs-keyword">void</span>)setExampleText:(<span class="hljs-built_in">NSString</span> *)text image:(<span class="hljs-built_in">UIImage</span> *)image;
- (<span class="hljs-keyword">void</span>)sendAction:(SEL)aSelector to:(<span class="hljs-keyword">id</span>)anObject forAllCells:(<span class="hljs-built_in">BOOL</span>)flag;
- (<span class="hljs-keyword">id</span>)viewWithTag:(<span class="hljs-built_in">NSInteger</span>)tag;
- (<span class="hljs-keyword">instancetype</span>)initWithWidth:(<span class="hljs-built_in">CGFloat</span>)width height:(<span class="hljs-built_in">CGFloat</span>)height;
</code></pre>
<p><strong>不应该:</strong></p>
<pre class="hljs objectivec"><code class="objectivec">-(<span class="hljs-keyword">void</span>)setT:(<span class="hljs-built_in">NSString</span> *)text i:(<span class="hljs-built_in">UIImage</span> *)image;
- (<span class="hljs-keyword">void</span>)sendAction:(SEL)aSelector :(<span class="hljs-keyword">id</span>)anObject :(<span class="hljs-built_in">BOOL</span>)flag;
- (<span class="hljs-keyword">id</span>)taggedView:(<span class="hljs-built_in">NSInteger</span>)tag;
- (<span class="hljs-keyword">instancetype</span>)initWithWidth:(<span class="hljs-built_in">CGFloat</span>)width andHeight:(<span class="hljs-built_in">CGFloat</span>)height;
- (<span class="hljs-keyword">instancetype</span>)initWith:(<span class="hljs-keyword">int</span>)width and:(<span class="hljs-keyword">int</span>)height;  <span class="hljs-comment">// Never do this.</span>
</code></pre>
<p>&lt;b id="variables"&gt;&lt;/b&gt;</p>
<h2>变量</h2>
<p>变量尽量以描述性的方式来命名。单个字符的变量命名应该尽量避免，除了在<code>for()</code>循环。</p>
<p>星号表示变量是指针。例如， <code>NSString *text</code> 既不是 <code>NSString* text</code> 也不是 <code>NSString * text</code>，除了一些特殊情况下常量。</p>
<p><a href="https://www.jianshu.com/p/8b76814b3663#private-properties" target="_blank">私有变量</a> 应该尽可能代替实例变量的使用。尽管使用实例变量是一种有效的方式，但更偏向于使用属性来保持代码一致性。</p>
<p>通过使用'back'属性(_variable，变量名前面有下划线)直接访问实例变量应该尽量避免，除了在初始化方法(<code>init</code>, <code>initWithCoder:</code>, 等…)，<code>dealloc</code> 方法和自定义的setters和getters。想了解关于如何在初始化方法和dealloc直接使用Accessor方法的更多信息，查看<a href="https://link.jianshu.com/?t=https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/MemoryMgmt/Articles/mmPractical.html#//apple_ref/doc/uid/TP40004447-SW6" target="_blank" rel="nofollow">这里</a></p>
<p><strong>应该:</strong></p>
<pre class="hljs objectivec"><code class="objectivec"><span class="hljs-class"><span class="hljs-keyword">@interface</span> <span class="hljs-title">RWTTutorial</span> : <span class="hljs-title">NSObject</span></span>

<span class="hljs-keyword">@property</span> (<span class="hljs-keyword">strong</span>, <span class="hljs-keyword">nonatomic</span>) <span class="hljs-built_in">NSString</span> *tutorialName;

<span class="hljs-keyword">@end</span>
</code></pre>
<p><strong>不应该:</strong></p>
<pre class="hljs objectivec"><code class="objectivec"><span class="hljs-class"><span class="hljs-keyword">@interface</span> <span class="hljs-title">RWTTutorial</span> : <span class="hljs-title">NSObject</span> </span>{
  <span class="hljs-built_in">NSString</span> *tutorialName;
}
</code></pre>
<p>&lt;b id="property-attributes"&gt;&lt;/b&gt;</p>
<h2>属性特性</h2>
<p>所有属性特性应该显式地列出来，有助于新手阅读代码。属性特性的顺序应该是storage、atomicity，与在Interface Builder连接UI元素时自动生成代码一致。</p>
<p><strong>应该:</strong></p>
<pre class="hljs objectivec"><code class="objectivec"><span class="hljs-keyword">@property</span> (<span class="hljs-keyword">weak</span>, <span class="hljs-keyword">nonatomic</span>) <span class="hljs-keyword">IBOutlet</span> <span class="hljs-built_in">UIView</span> *containerView;
<span class="hljs-keyword">@property</span> (<span class="hljs-keyword">strong</span>, <span class="hljs-keyword">nonatomic</span>) <span class="hljs-built_in">NSString</span> *tutorialName;
</code></pre>
<p><strong>不应该:</strong></p>
<pre class="hljs objectivec"><code class="objectivec"><span class="hljs-keyword">@property</span> (<span class="hljs-keyword">nonatomic</span>, <span class="hljs-keyword">weak</span>) <span class="hljs-keyword">IBOutlet</span> <span class="hljs-built_in">UIView</span> *containerView;
<span class="hljs-keyword">@property</span> (<span class="hljs-keyword">nonatomic</span>) <span class="hljs-built_in">NSString</span> *tutorialName;
</code></pre>
<p>NSString应该使用<code>copy</code> 而不是 <code>strong</code>的属性特性。</p>
<p>为什么？即使你声明一个<code>NSString</code>的属性，有人可能传入一个<code>NSMutableString</code>的实例，然后在你没有注意的情况下修改它。</p>
<p><strong>应该:</strong></p>
<pre class="hljs objectivec"><code class="objectivec"><span class="hljs-keyword">@property</span> (<span class="hljs-keyword">copy</span>, <span class="hljs-keyword">nonatomic</span>) <span class="hljs-built_in">NSString</span> *tutorialName;
</code></pre>
<p><strong>不应该:</strong></p>
<pre class="hljs objectivec"><code class="objectivec"><span class="hljs-keyword">@property</span> (<span class="hljs-keyword">strong</span>, <span class="hljs-keyword">nonatomic</span>) <span class="hljs-built_in">NSString</span> *tutorialName;
</code></pre>
<p>&lt;b id="dot-notation-syntax"&gt;&lt;/b&gt;</p>
<h2>点符号语法</h2>
<p>点语法是一种很方便封装访问方法调用的方式。当你使用点语法时，通过使用getter或setter方法，属性仍然被访问或修改。想了解更多，阅读<a href="https://link.jianshu.com/?t=https://developer.apple.com/library/ios/documentation/cocoa/conceptual/ProgrammingWithObjectiveC/EncapsulatingData/EncapsulatingData.html" target="_blank" rel="nofollow">这里</a></p>
<p>点语法应该<strong>总是</strong>被用来访问和修改属性，因为它使代码更加简洁。[]符号更偏向于用在其他例子。</p>
<p><strong>应该:</strong></p>
<pre class="hljs objectivec"><code class="objectivec"><span class="hljs-built_in">NSInteger</span> arrayCount = <span class="hljs-keyword">self</span>.array.count;
view.backgroundColor = [<span class="hljs-built_in">UIColor</span> orangeColor];
[<span class="hljs-built_in">UIApplication</span> sharedApplication].delegate;
</code></pre>
<p><strong>不应该:</strong></p>
<pre class="hljs objectivec"><code class="objectivec"><span class="hljs-built_in">NSInteger</span> arrayCount = [<span class="hljs-keyword">self</span>.array count];
[view setBackgroundColor:[<span class="hljs-built_in">UIColor</span> orangeColor]];
[[<span class="hljs-built_in">UIApplication</span> sharedApplication] delegate];
</code></pre>
<p>&lt;b id="literals"&gt;&lt;/b&gt;</p>
<h2>字面值</h2>
<p><code>NSString</code>, <code>NSDictionary</code>, <code>NSArray</code>, 和 <code>NSNumber</code>的字面值应该在创建这些类的不可变实例时被使用。请特别注意<code>nil</code>值不能传入<code>NSArray</code>和<code>NSDictionary</code>字面值，因为这样会导致crash。</p>
<p><strong>应该:</strong></p>
<pre class="hljs objectivec"><code class="objectivec"><span class="hljs-built_in">NSArray</span> *names = @[<span class="hljs-string">@"Brian"</span>, <span class="hljs-string">@"Matt"</span>, <span class="hljs-string">@"Chris"</span>, <span class="hljs-string">@"Alex"</span>, <span class="hljs-string">@"Steve"</span>, <span class="hljs-string">@"Paul"</span>];
<span class="hljs-built_in">NSDictionary</span> *productManagers = @{<span class="hljs-string">@"iPhone"</span>: <span class="hljs-string">@"Kate"</span>, <span class="hljs-string">@"iPad"</span>: <span class="hljs-string">@"Kamal"</span>, <span class="hljs-string">@"Mobile Web"</span>: <span class="hljs-string">@"Bill"</span>};
<span class="hljs-built_in">NSNumber</span> *shouldUseLiterals = @YES;
<span class="hljs-built_in">NSNumber</span> *buildingStreetNumber = @<span class="hljs-number">10018</span>;
</code></pre>
<p><strong>不应该:</strong></p>
<pre class="hljs objectivec"><code class="objectivec"><span class="hljs-built_in">NSArray</span> *names = [<span class="hljs-built_in">NSArray</span> arrayWithObjects:<span class="hljs-string">@"Brian"</span>, <span class="hljs-string">@"Matt"</span>, <span class="hljs-string">@"Chris"</span>, <span class="hljs-string">@"Alex"</span>, <span class="hljs-string">@"Steve"</span>, <span class="hljs-string">@"Paul"</span>, <span class="hljs-literal">nil</span>];
<span class="hljs-built_in">NSDictionary</span> *productManagers = [<span class="hljs-built_in">NSDictionary</span> dictionaryWithObjectsAndKeys: <span class="hljs-string">@"Kate"</span>, <span class="hljs-string">@"iPhone"</span>, <span class="hljs-string">@"Kamal"</span>, <span class="hljs-string">@"iPad"</span>, <span class="hljs-string">@"Bill"</span>, <span class="hljs-string">@"Mobile Web"</span>, <span class="hljs-literal">nil</span>];
<span class="hljs-built_in">NSNumber</span> *shouldUseLiterals = [<span class="hljs-built_in">NSNumber</span> numberWithBool:<span class="hljs-literal">YES</span>];
<span class="hljs-built_in">NSNumber</span> *buildingStreetNumber = [<span class="hljs-built_in">NSNumber</span> numberWithInteger:<span class="hljs-number">10018</span>];
</code></pre>
<p>&lt;b id="constants"&gt;&lt;/b&gt;</p>
<h2>常量</h2>
<p>常量是容易重复被使用和无需通过查找和代替就能快速修改值。常量应该使用<code>static</code>来声明而不是使用<code>#define</code>，除非显式地使用宏。</p>
<p><strong>应该:</strong></p>
<pre class="hljs objectivec"><code class="objectivec"><span class="hljs-keyword">static</span> <span class="hljs-built_in">NSString</span> * <span class="hljs-keyword">const</span> RWTAboutViewControllerCompanyName = <span class="hljs-string">@"RayWenderlich.com"</span>;

<span class="hljs-keyword">static</span> <span class="hljs-built_in">CGFloat</span> <span class="hljs-keyword">const</span> RWTImageThumbnailHeight = <span class="hljs-number">50.0</span>;
</code></pre>
<p><strong>不应该:</strong></p>
<pre class="hljs cpp"><code class="cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> CompanyName @<span class="hljs-meta-string">"RayWenderlich.com"</span></span>

<span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> thumbnailHeight 2</span>
</code></pre>
<p>&lt;b id="enumerated-types"&gt;&lt;/b&gt;</p>
<h2>枚举类型</h2>
<p>当使用<code>enum</code>时，推荐使用新的固定基本类型规格，因为它有更强的类型检查和代码补全。现在SDK有一个宏<code>NS_ENUM()</code>来帮助和鼓励你使用固定的基本类型。</p>
<p><strong>例如:</strong></p>
<pre class="hljs objectivec"><code class="objectivec"><span class="hljs-keyword">typedef</span> <span class="hljs-built_in">NS_ENUM</span>(<span class="hljs-built_in">NSInteger</span>, RWTLeftMenuTopItemType) {
  RWTLeftMenuTopItemMain,
  RWTLeftMenuTopItemShows,
  RWTLeftMenuTopItemSchedule
};
</code></pre>
<p>你也可以显式地赋值(展示旧的k-style常量定义)：</p>
<pre class="hljs objectivec"><code class="objectivec"><span class="hljs-keyword">typedef</span> <span class="hljs-built_in">NS_ENUM</span>(<span class="hljs-built_in">NSInteger</span>, RWTGlobalConstants) {
  RWTPinSizeMin = <span class="hljs-number">1</span>,
  RWTPinSizeMax = <span class="hljs-number">5</span>,
  RWTPinCountMin = <span class="hljs-number">100</span>,
  RWTPinCountMax = <span class="hljs-number">500</span>,
};
</code></pre>
<p>旧的k-style常量定义应该<strong>避免</strong>除非编写Core Foundation C的代码。</p>
<p><strong>不应该:</strong></p>
<pre class="hljs cpp"><code class="cpp"><span class="hljs-keyword">enum</span> GlobalConstants {
  kMaxPinSize = <span class="hljs-number">5</span>,
  kMaxPinCount = <span class="hljs-number">500</span>,
};
</code></pre>
<p>&lt;b id="case-statements"&gt;&lt;/b&gt;</p>
<h2>Case语句</h2>
<p>大括号在case语句中并不是必须的，除非编译器强制要求。当一个case语句包含多行代码时，大括号应该加上。</p>
<pre class="hljs cpp"><code class="cpp"><span class="hljs-keyword">switch</span> (condition) {
  <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:
    <span class="hljs-comment">// ...</span>
    <span class="hljs-keyword">break</span>;
  <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>: {
    <span class="hljs-comment">// ...</span>
    <span class="hljs-comment">// Multi-line example using braces</span>
    <span class="hljs-keyword">break</span>;
  }
  <span class="hljs-keyword">case</span> <span class="hljs-number">3</span>:
    <span class="hljs-comment">// ...</span>
    <span class="hljs-keyword">break</span>;
  <span class="hljs-keyword">default</span>: 
    <span class="hljs-comment">// ...</span>
    <span class="hljs-keyword">break</span>;
}

</code></pre>
<p>有很多次，当相同代码被多个cases使用时，一个fall-through应该被使用。一个fall-through就是在case最后移除'break'语句，这样就能够允许执行流程跳转到下一个case值。为了代码更加清晰，一个fall-through需要注释一下。</p>
<pre class="hljs cpp"><code class="cpp"><span class="hljs-keyword">switch</span> (condition) {
  <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:
    <span class="hljs-comment">// ** fall-through! **</span>
  <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:
    <span class="hljs-comment">// code executed for values 1 and 2</span>
    <span class="hljs-keyword">break</span>;
  <span class="hljs-keyword">default</span>: 
    <span class="hljs-comment">// ...</span>
    <span class="hljs-keyword">break</span>;
}

</code></pre>
<p>当在switch使用枚举类型时，'default'是不需要的。例如：</p>
<pre class="hljs cpp"><code class="cpp">RWTLeftMenuTopItemType menuType = RWTLeftMenuTopItemMain;

<span class="hljs-keyword">switch</span> (menuType) {
  <span class="hljs-keyword">case</span> RWTLeftMenuTopItemMain:
    <span class="hljs-comment">// ...</span>
    <span class="hljs-keyword">break</span>;
  <span class="hljs-keyword">case</span> RWTLeftMenuTopItemShows:
    <span class="hljs-comment">// ...</span>
    <span class="hljs-keyword">break</span>;
  <span class="hljs-keyword">case</span> RWTLeftMenuTopItemSchedule:
    <span class="hljs-comment">// ...</span>
    <span class="hljs-keyword">break</span>;
}
</code></pre>
<p>&lt;b id="private-properties"&gt;&lt;/b&gt;</p>
<h2>私有属性</h2>
<p>私有属性应该在类的实现文件中的类扩展(匿名分类)中声明，命名分类(比如<code>RWTPrivate</code>或<code>private</code>)应该从不使用除非是扩展其他类。匿名分类应该通过使用&lt;headerfile&gt;+Private.h文件的命名规则暴露给测试。</p>
<p><strong>例如:</strong></p>
<pre class="hljs objectivec"><code class="objectivec"><span class="hljs-class"><span class="hljs-keyword">@interface</span> <span class="hljs-title">RWTDetailViewController</span> ()</span>

<span class="hljs-keyword">@property</span> (<span class="hljs-keyword">strong</span>, <span class="hljs-keyword">nonatomic</span>) GADBannerView *googleAdView;
<span class="hljs-keyword">@property</span> (<span class="hljs-keyword">strong</span>, <span class="hljs-keyword">nonatomic</span>) ADBannerView *iAdView;
<span class="hljs-keyword">@property</span> (<span class="hljs-keyword">strong</span>, <span class="hljs-keyword">nonatomic</span>) <span class="hljs-built_in">UIWebView</span> *adXWebView;

<span class="hljs-keyword">@end</span>
</code></pre>
<p>&lt;b id="booleans"&gt;&lt;/b&gt;</p>
<h2>布尔值</h2>
<p>Objective-C使用<code>YES</code>和<code>NO</code>。因为<code>true</code>和<code>false</code>应该只在CoreFoundation，C或C++代码使用。既然<code>nil</code>解析成<code>NO</code>，所以没有必要在条件语句比较。不要拿某样东西直接与<code>YES</code>比较，因为<code>YES</code>被定义为1和一个<code>BOOL</code>能被设置为8位。</p>
<p>这是为了在不同文件保持一致性和在视觉上更加简洁而考虑。</p>
<p><strong>应该:</strong></p>
<pre class="hljs css"><code class="css"><span class="hljs-selector-tag">if</span> (<span class="hljs-selector-tag">someObject</span>) {}
<span class="hljs-selector-tag">if</span> (!<span class="hljs-selector-attr">[anotherObject boolValue]</span>) {}
</code></pre>
<p><strong>不应该:</strong></p>
<pre class="hljs objectivec"><code class="objectivec"><span class="hljs-keyword">if</span> (someObject == <span class="hljs-literal">nil</span>) {}
<span class="hljs-keyword">if</span> ([anotherObject boolValue] == <span class="hljs-literal">NO</span>) {}
<span class="hljs-keyword">if</span> (isAwesome == <span class="hljs-literal">YES</span>) {} <span class="hljs-comment">// Never do this.</span>
<span class="hljs-keyword">if</span> (isAwesome == <span class="hljs-literal">true</span>) {} <span class="hljs-comment">// Never do this.</span>
</code></pre>
<p>如果<code>BOOL</code>属性的名字是一个形容词，属性就能忽略"is"前缀，但要指定get访问器的惯用名称。例如：</p>
<pre class="hljs objectivec"><code class="objectivec"><span class="hljs-keyword">@property</span> (<span class="hljs-keyword">assign</span>, <span class="hljs-keyword">getter</span>=isEditable) <span class="hljs-built_in">BOOL</span> editable;
</code></pre>
<p>文字和例子从这里引用<a href="https://link.jianshu.com/?t=https://developer.apple.com/library/mac/#documentation/Cocoa/Conceptual/CodingGuidelines/Articles/NamingIvarsAndTypes.html#//apple_ref/doc/uid/20001284-BAJGIIJE" target="_blank" rel="nofollow">Cocoa Naming Guidelines</a></p>
<p>&lt;b id="conditionals"&gt;&lt;/b&gt;</p>
<h2>条件语句</h2>
<p>条件语句主体为了防止出错应该使用大括号包围，即使条件语句主体能够不用大括号编写(如，只用一行代码)。这些错误包括添加第二行代码和期望它成为if语句；还有，<a href="https://link.jianshu.com/?t=http://programmers.stackexchange.com/a/16530" target="_blank" rel="nofollow">even more dangerous defect</a>可能发生在if语句里面一行代码被注释了，然后下一行代码不知不觉地成为if语句的一部分。除此之外，这种风格与其他条件语句的风格保持一致，所以更加容易阅读。</p>
<p><strong>应该:</strong></p>
<pre class="hljs bash"><code class="bash"><span class="hljs-keyword">if</span> (!error) {
  <span class="hljs-built_in">return</span> success;
}
</code></pre>
<p><strong>不应该:</strong></p>
<pre class="hljs bash"><code class="bash"><span class="hljs-keyword">if</span> (!error)
  <span class="hljs-built_in">return</span> success;
</code></pre>
<p>或</p>
<pre class="hljs bash"><code class="bash"><span class="hljs-keyword">if</span> (!error) <span class="hljs-built_in">return</span> success;
</code></pre>
<p>&lt;b id="ternary-operator"&gt;&lt;/b&gt;</p>
<h3>三元操作符</h3>
<p>当需要提高代码的清晰性和简洁性时，三元操作符<code>?:</code>才会使用。单个条件求值常常需要它。多个条件求值时，如果使用<code>if</code>语句或重构成实例变量时，代码会更加易读。一般来说，最好使用三元操作符是在根据条件来赋值的情况下。</p>
<p>Non-boolean的变量与某东西比较，加上括号()会提高可读性。如果被比较的变量是boolean类型，那么就不需要括号。</p>
<p><strong>应该:</strong></p>
<pre class="hljs objectivec"><code class="objectivec"><span class="hljs-built_in">NSInteger</span> value = <span class="hljs-number">5</span>;
result = (value != <span class="hljs-number">0</span>) ? x : y;

<span class="hljs-built_in">BOOL</span> isHorizontal = <span class="hljs-literal">YES</span>;
result = isHorizontal ? x : y;
</code></pre>
<p><strong>不应该:</strong></p>
<pre class="hljs undefined"><code class="objc">result = a &gt; b ? x = c &gt; d ? c : d : y;
</code></pre>
<p>&lt;b id="init-methods"&gt;&lt;/b&gt;</p>
<h2>Init方法</h2>
<p>Init方法应该遵循Apple生成代码模板的命名规则。返回类型应该使用<code>instancetype</code>而不是<code>id</code></p>
<pre class="hljs objectivec"><code class="objectivec">- (<span class="hljs-keyword">instancetype</span>)init {
  <span class="hljs-keyword">self</span> = [<span class="hljs-keyword">super</span> init];
  <span class="hljs-keyword">if</span> (<span class="hljs-keyword">self</span>) {
    <span class="hljs-comment">// ...</span>
  }
  <span class="hljs-keyword">return</span> <span class="hljs-keyword">self</span>;
}
</code></pre>
<p>查看关于instancetype的文章<a href="https://www.jianshu.com/p/8b76814b3663#class-constructor-methods" target="_blank">Class Constructor Methods</a></p>
<p>&lt;b id="class-constructor-methods"&gt;&lt;/b&gt;</p>
<h2>类构造方法</h2>
<p>当类构造方法被使用时，它应该返回类型是<code>instancetype</code>而不是<code>id</code>。这样确保编译器正确地推断结果类型。</p>
<pre class="hljs objectivec"><code class="objectivec"><span class="hljs-class"><span class="hljs-keyword">@interface</span> <span class="hljs-title">Airplane</span></span>
+ (<span class="hljs-keyword">instancetype</span>)airplaneWithType:(RWTAirplaneType)type;
<span class="hljs-keyword">@end</span>
</code></pre>
<p>关于更多instancetype信息，请查看<a href="https://link.jianshu.com/?t=http://nshipster.com/instancetype/" target="_blank" rel="nofollow">NSHipster.com</a></p>
<p>&lt;b id="cgrect-functions"&gt;&lt;/b&gt;</p>
<h2>CGRect函数</h2>
<p>当访问<code>CGRect</code>里的<code>x</code>, <code>y</code>, <code>width</code>, 或 <code>height</code>时，应该使用<a href="https://link.jianshu.com/?t=http://developer.apple.com/library/ios/#documentation/graphicsimaging/reference/CGGeometry/Reference/reference.html" target="_blank" rel="nofollow"><code>CGGeometry</code>函数</a>而不是直接通过结构体来访问。引用Apple的<code>CGGeometry</code>:</p>
<blockquote>
<p>在这个参考文档中所有的函数，接受CGRect结构体作为输入，在计算它们结果时隐式地标准化这些rectangles。因此，你的应用程序应该避免直接访问和修改保存在CGRect数据结构中的数据。相反，使用这些函数来操纵rectangles和获取它们的特性。</p>
</blockquote>
<p><strong>应该:</strong></p>
<pre class="hljs objectivec"><code class="objectivec"><span class="hljs-built_in">CGRect</span> frame = <span class="hljs-keyword">self</span>.view.frame;

<span class="hljs-built_in">CGFloat</span> x = <span class="hljs-built_in">CGRectGetMinX</span>(frame);
<span class="hljs-built_in">CGFloat</span> y = <span class="hljs-built_in">CGRectGetMinY</span>(frame);
<span class="hljs-built_in">CGFloat</span> width = <span class="hljs-built_in">CGRectGetWidth</span>(frame);
<span class="hljs-built_in">CGFloat</span> height = <span class="hljs-built_in">CGRectGetHeight</span>(frame);
<span class="hljs-built_in">CGRect</span> frame = <span class="hljs-built_in">CGRectMake</span>(<span class="hljs-number">0.0</span>, <span class="hljs-number">0.0</span>, width, height);
</code></pre>
<p><strong>不应该:</strong></p>
<pre class="hljs objectivec"><code class="objectivec"><span class="hljs-built_in">CGRect</span> frame = <span class="hljs-keyword">self</span>.view.frame;

<span class="hljs-built_in">CGFloat</span> x = frame.origin.x;
<span class="hljs-built_in">CGFloat</span> y = frame.origin.y;
<span class="hljs-built_in">CGFloat</span> width = frame.size.width;
<span class="hljs-built_in">CGFloat</span> height = frame.size.height;
<span class="hljs-built_in">CGRect</span> frame = (<span class="hljs-built_in">CGRect</span>){ .origin = <span class="hljs-built_in">CGPointZero</span>, .size = frame.size };
</code></pre>
<p>&lt;b id="golden-path"&gt;&lt;/b&gt;</p>
<h2>黄金路径</h2>
<p>当使用条件语句编码时，左手边的代码应该是"golden" 或 "happy"路径。也就是不要嵌套<code>if</code>语句，多个返回语句也是OK。</p>
<p><strong>应该:</strong></p>
<pre class="hljs cpp"><code class="cpp">- (<span class="hljs-keyword">void</span>)someMethod {
  <span class="hljs-keyword">if</span> (![someOther boolValue]) {
    <span class="hljs-keyword">return</span>;
  }

  <span class="hljs-comment">//Do something important</span>
}
</code></pre>
<p><strong>不应该:</strong></p>
<pre class="hljs cpp"><code class="cpp">- (<span class="hljs-keyword">void</span>)someMethod {
  <span class="hljs-keyword">if</span> ([someOther boolValue]) {
    <span class="hljs-comment">//Do something important</span>
  }
}
</code></pre>
<p>&lt;b id="error-handling"&gt;&lt;/b&gt;</p>
<h2>错误处理</h2>
<p>当方法通过引用来返回一个错误参数，判断返回值而不是错误变量。</p>
<p><strong>应该:</strong></p>
<pre class="hljs objectivec"><code class="objectivec"><span class="hljs-built_in">NSError</span> *error;
<span class="hljs-keyword">if</span> (![<span class="hljs-keyword">self</span> trySomethingWithError:&amp;error]) {
  <span class="hljs-comment">// Handle Error</span>
}
</code></pre>
<p><strong>不应该:</strong></p>
<pre class="hljs objectivec"><code class="objectivec"><span class="hljs-built_in">NSError</span> *error;
[<span class="hljs-keyword">self</span> trySomethingWithError:&amp;error];
<span class="hljs-keyword">if</span> (error) {
  <span class="hljs-comment">// Handle Error</span>
}
</code></pre>
<p>在成功的情况下，有些Apple的APIs记录垃圾值(garbage values)到错误参数(如果non-NULL)，那么判断错误值会导致false负值和crash。</p>
<p>&lt;b id="singletons"&gt;&lt;/b&gt;</p>
<h2>单例模式</h2>
<p>单例对象应该使用线程安全模式来创建共享实例。</p>
<pre class="hljs objectivec"><code class="objectivec">+ (<span class="hljs-keyword">instancetype</span>)sharedInstance {
  <span class="hljs-keyword">static</span> <span class="hljs-keyword">id</span> sharedInstance = <span class="hljs-literal">nil</span>;

  <span class="hljs-keyword">static</span> <span class="hljs-built_in">dispatch_once_t</span> onceToken;
  <span class="hljs-built_in">dispatch_once</span>(&amp;onceToken, ^{
    sharedInstance = [[<span class="hljs-keyword">self</span> alloc] init];
  });

  <span class="hljs-keyword">return</span> sharedInstance;
}
</code></pre>
<p>这会防止<a href="https://link.jianshu.com/?t=http://cocoasamurai.blogspot.com/2011/04/singletons-your-doing-them-wrong.html" target="_blank" rel="nofollow">possible and sometimes prolific crashes</a>.</p>
<p>&lt;b id="line-breaks"&gt;&lt;/b&gt;</p>
<h2>换行符</h2>
<p>换行符是一个很重要的主题，因为它的风格指南主要为了打印和网上的可读性。</p>
<p>例如:</p>
<pre class="hljs objectivec"><code class="objectivec"><span class="hljs-keyword">self</span>.productsRequest = [[<span class="hljs-built_in">SKProductsRequest</span> alloc] initWithProductIdentifiers:productIdentifiers];
</code></pre>
<p>一行很长的代码应该分成两行代码，下一行用两个空格隔开。</p>
<pre class="hljs objectivec"><code class="objectivec"><span class="hljs-keyword">self</span>.productsRequest = [[<span class="hljs-built_in">SKProductsRequest</span> alloc] 
  initWithProductIdentifiers:productIdentifiers];
</code></pre>
<p>&lt;b id="xcode-project"&gt;&lt;/b&gt;</p>
<h2>Xcode工程</h2>
<p>物理文件应该与Xcode工程文件保持同步来避免文件扩张。任何Xcode分组的创建应该在文件系统的文件体现。代码不仅是根据<strong>类型</strong>来分组，而且还可以根据<strong>功能</strong>来分组，这样代码更加清晰。</p>
<p>尽可能在target的Build Settings打开"Treat Warnings as Errors，和启用以下<a href="https://link.jianshu.com/?t=http://boredzo.org/blog/archives/2009-11-07/warnings" target="_blank" rel="nofollow">additional warnings</a>。如果你需要忽略特殊的警告，使用 <a href="https://link.jianshu.com/?t=http://clang.llvm.org/docs/UsersManual.html#controlling-diagnostics-via-pragmas" target="_blank" rel="nofollow">Clang's pragma feature</a>。</p>
<h1>其他Objective-C编码规范</h1>
<p>如果我们的编码规范不符合你的口味，可以查看其他的编码规范：</p>
<ul>
<li><a href="https://link.jianshu.com/?t=https://github.com/RobotsAndPencils/objective-c-style-guide" target="_blank" rel="nofollow">Robots &amp; Pencils</a></li>
<li><a href="https://link.jianshu.com/?t=https://github.com/NYTimes/objective-c-style-guide" target="_blank" rel="nofollow">New York Times</a></li>
<li><a href="https://link.jianshu.com/?t=http://google-styleguide.googlecode.com/svn/trunk/objcguide.xml" target="_blank" rel="nofollow">Google</a></li>
<li><a href="https://link.jianshu.com/?t=https://github.com/github/objective-c-conventions" target="_blank" rel="nofollow">GitHub</a></li>
<li><a href="https://link.jianshu.com/?t=https://trac.adium.im/wiki/CodingStyle" target="_blank" rel="nofollow">Adium</a></li>
<li><a href="https://link.jianshu.com/?t=https://gist.github.com/soffes/812796" target="_blank" rel="nofollow">Sam Soffes</a></li>
<li><a href="https://link.jianshu.com/?t=http://cocoadevcentral.com/articles/000082.php" target="_blank" rel="nofollow">CocoaDevCentral</a></li>
<li><a href="https://link.jianshu.com/?t=http://lukeredpath.co.uk/blog/my-objective-c-style-guide.html" target="_blank" rel="nofollow">Luke Redpath</a></li>
<li><a href="https://link.jianshu.com/?t=http://www.cimgf.com/zds-code-style-guide/" target="_blank" rel="nofollow">Marcus Zarra</a></li>
</ul>

          </div>
        </div>
    </div>

    <!-- 如果是付费文章，未购买，则显示购买按钮 -->

    <!-- 连载目录项 -->

    <!-- 如果是付费文章 -->
      <!-- 如果是付费连载，已购买，且作者允许赞赏，则显示付费信息和赞赏 -->
        <div id="free-reward-panel" class="support-author"><p>小礼物走一走，来简书关注我</p> <div class="btn btn-pay">赞赏支持</div> <div class="supporter"><ul class="support-list"></ul> <!----></div> <!----> <!----></div>

      <div class="show-foot">
        <a class="notebook" href="https://www.jianshu.com/nb/342298">
          <i class="iconfont ic-search-notebook"></i>
          <span>iOS</span>
</a>        <div class="copyright" data-toggle="tooltip" data-html="true" data-original-title="转载请联系作者获得授权，并标注“简书作者”。">
          © 著作权归作者所有
        </div>
        <div class="modal-wrap" data-report-note="">
          <a id="report-modal">举报文章</a>
        </div>
      </div>

      <!-- 文章底部作者信息 -->
        <div class="follow-detail">
          <div class="info">
            <a class="avatar" href="https://www.jianshu.com/u/256fb15baf75">
              <img src="./OC 代码规范_files/c1944515bfcf.jpg" alt="96">
</a>            <a class="btn btn-success follow"><i class="iconfont ic-follow"></i><span>关注</span></a>
            <a class="title" href="https://www.jianshu.com/u/256fb15baf75">Sam_Lau</a>
          <p>写了 47068 字，被 3330 人关注，获得了 2506 个喜欢</p></div>
            <div class="signature">iOS Developer兼业余Designer，Apple重度用户，Unix/Linux脑残粉丝，关注移动互联网，记录对技术思考和学习的点滴！</div>
        </div>

    <div class="meta-bottom">
      <div data-v-6ddd02c6="" class="like"><div data-v-6ddd02c6="" class="btn like-group"><div data-v-6ddd02c6="" class="btn-like"><a data-v-6ddd02c6="">喜欢</a></div> <div data-v-6ddd02c6="" class="modal-wrap"><a data-v-6ddd02c6="">158</a></div></div> <!----></div>
      <div class="share-group">
        <a class="share-circle" data-action="weixin-share" data-toggle="tooltip" data-original-title="分享到微信">
          <i class="iconfont ic-wechat"></i>
        </a>
        <a class="share-circle" data-action="weibo-share" data-toggle="tooltip" href="javascript:void((function(s,d,e,r,l,p,t,z,c){var%20f=&#39;http://v.t.sina.com.cn/share/share.php?appkey=1881139527&#39;,u=z||d.location,p=[&#39;&amp;url=&#39;,e(u),&#39;&amp;title=&#39;,e(t||d.title),&#39;&amp;source=&#39;,e(r),&#39;&amp;sourceUrl=&#39;,e(l),&#39;&amp;content=&#39;,c||&#39;gb2312&#39;,&#39;&amp;pic=&#39;,e(p||&#39;&#39;)].join(&#39;&#39;);function%20a(){if(!window.open([f,p].join(&#39;&#39;),&#39;mb&#39;,[&#39;toolbar=0,status=0,resizable=1,width=440,height=430,left=&#39;,(s.width-440)/2,&#39;,top=&#39;,(s.height-430)/2].join(&#39;&#39;)))u.href=[f,p].join(&#39;&#39;);};if(/Firefox/.test(navigator.userAgent))setTimeout(a,0);else%20a();})(screen,document,encodeURIComponent,&#39;&#39;,&#39;&#39;,&#39;&#39;, &#39;推荐 @Sam_Lau_Dev 的文章《Objective-C编码规范[译]》（ 分享自 @简书 ）&#39;,&#39;https://www.jianshu.com/p/8b76814b3663?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=reader_share&amp;utm_source=weibo&#39;,&#39;页面编码gb2312|utf-8默认gb2312&#39;));" data-original-title="分享到微博">
          <i class="iconfont ic-weibo"></i>
        </a>
        <a class="share-circle" data-toggle="tooltip" id="longshare" target="_blank" data-original-title="" title="">
            <div class="qrcode" id="qrcode">
             <img src="./OC 代码规范_files/download-index-side-qrcode-cb13fc9106a478795f8d10f9f632fccf.png" alt="Download index side qrcode">
             <p>下载app生成长微博图片</p>
             </div>
          <i class="iconfont ic-picture"></i>
        </a>
        <a class="share-circle more-share" tabindex="0" data-toggle="popover" data-placement="top" data-html="true" data-trigger="focus" href="javascript:void(0);" data-content="
          &lt;ul class=&quot;share-list&quot;&gt;
            &lt;li&gt;&lt;a href=&quot;javascript:void(function(){var d=document,e=encodeURIComponent,r=&#39;http://sns.qzone.qq.com/cgi-bin/qzshare/cgi_qzshare_onekey?url=&#39;+e(&#39;https://www.jianshu.com/p/8b76814b3663?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=reader_share&amp;utm_source=qzone&#39;)+&#39;&amp;title=&#39;+e(&#39;推荐 Sam_Lau 的文章《Objective-C编码规范[译]》&#39;),x=function(){if(!window.open(r,&#39;qzone&#39;,&#39;toolbar=0,resizable=1,scrollbars=yes,status=1,width=600,height=600&#39;))location.href=r};if(/Firefox/.test(navigator.userAgent)){setTimeout(x,0)}else{x()}})();&quot;&gt;&lt;i class=&quot;social-icon-sprite social-icon-zone&quot;&gt;&lt;/i&gt;&lt;span&gt;分享到QQ空间&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;javascript:void(function(){var d=document,e=encodeURIComponent,r=&#39;https://twitter.com/share?url=&#39;+e(&#39;https://www.jianshu.com/p/8b76814b3663?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=reader_share&amp;utm_source=twitter&#39;)+&#39;&amp;text=&#39;+e(&#39;推荐 Sam_Lau 的文章《Objective-C编码规范[译]》（ 分享自 @jianshucom ）&#39;)+&#39;&amp;related=&#39;+e(&#39;jianshucom&#39;),x=function(){if(!window.open(r,&#39;twitter&#39;,&#39;toolbar=0,resizable=1,scrollbars=yes,status=1,width=600,height=600&#39;))location.href=r};if(/Firefox/.test(navigator.userAgent)){setTimeout(x,0)}else{x()}})();&quot;&gt;&lt;i class=&quot;social-icon-sprite social-icon-twitter&quot;&gt;&lt;/i&gt;&lt;span&gt;分享到Twitter&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;javascript:void(function(){var d=document,e=encodeURIComponent,r=&#39;https://www.facebook.com/dialog/share?app_id=483126645039390&amp;display=popup&amp;href=https://www.jianshu.com/p/8b76814b3663?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=reader_share&amp;utm_source=facebook&#39;,x=function(){if(!window.open(r,&#39;facebook&#39;,&#39;toolbar=0,resizable=1,scrollbars=yes,status=1,width=450,height=330&#39;))location.href=r};if(/Firefox/.test(navigator.userAgent)){setTimeout(x,0)}else{x()}})();&quot;&gt;&lt;i class=&quot;social-icon-sprite social-icon-facebook&quot;&gt;&lt;/i&gt;&lt;span&gt;分享到Facebook&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;javascript:void(function(){var d=document,e=encodeURIComponent,r=&#39;https://plus.google.com/share?url=&#39;+e(&#39;https://www.jianshu.com/p/8b76814b3663?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=reader_share&amp;utm_source=google_plus&#39;),x=function(){if(!window.open(r,&#39;google_plus&#39;,&#39;toolbar=0,resizable=1,scrollbars=yes,status=1,width=450,height=330&#39;))location.href=r};if(/Firefox/.test(navigator.userAgent)){setTimeout(x,0)}else{x()}})();&quot;&gt;&lt;i class=&quot;social-icon-sprite social-icon-google&quot;&gt;&lt;/i&gt;&lt;span&gt;分享到Google+&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;javascript:void(function(){var d=document,e=encodeURIComponent,s1=window.getSelection,s2=d.getSelection,s3=d.selection,s=s1?s1():s2?s2():s3?s3.createRange().text:&#39;&#39;,r=&#39;http://www.douban.com/recommend/?url=&#39;+e(&#39;https://www.jianshu.com/p/8b76814b3663?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=reader_share&amp;utm_source=douban&#39;)+&#39;&amp;title=&#39;+e(&#39;Objective-C编码规范[译]&#39;)+&#39;&amp;sel=&#39;+e(s)+&#39;&amp;v=1&#39;,x=function(){if(!window.open(r,&#39;douban&#39;,&#39;toolbar=0,resizable=1,scrollbars=yes,status=1,width=450,height=330&#39;))location.href=r+&#39;&amp;r=1&#39;};if(/Firefox/.test(navigator.userAgent)){setTimeout(x,0)}else{x()}})()&quot;&gt;&lt;i class=&quot;social-icon-sprite social-icon-douban&quot;&gt;&lt;/i&gt;&lt;span&gt;分享到豆瓣&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
          &lt;/ul&gt;
        " data-original-title="" title="">更多分享</a>
      </div>
    </div>
      <a id="web-note-ad-1" target="_blank" href="https://www.jianshu.com/apps/redirect?utm_source=note-bottom-click"><img src="./OC 代码规范_files/web-note-ad-1-c2e1746859dbf03abe49248893c9bea4.png" alt="Web note ad 1"></a>
    <div id="vue_comment"></div>
  </div>

  <div class="side-tool"><ul><li data-placement="left" data-toggle="tooltip" data-container="body" data-original-title="回到顶部" style=""><a class="function-button"><i class="iconfont ic-backtop"></i></a></li> <!----> <!----> <!----> <li data-placement="left" data-toggle="tooltip" data-container="body" data-original-title="分享文章" id="share"><a tabindex="0" role="button" data-toggle="popover" data-placement="left" data-html="true" data-trigger="focus" href="javascript:void(0);" data-content="&lt;ul class=&#39;share-list&#39; style=&quot;width:220px&quot;&gt;
                  &lt;li&gt;&lt;a class=&quot;weixin-share&quot;&gt;&lt;i class=&quot;social-icon-sprite social-icon-weixin&quot;&gt;&lt;/i&gt;&lt;span&gt;分享到微信&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
                  &lt;li&gt;&lt;a href=&quot;javascript:void((function(s,d,e,r,l,p,t,z,c){var%20f=&#39;http://v.t.sina.com.cn/share/share.php?appkey=1881139527&#39;,u=z||d.location,p=[&#39;&amp;url=&#39;,e(u),&#39;&amp;title=&#39;,e(t||d.title),&#39;&amp;source=&#39;,e(r),&#39;&amp;sourceUrl=&#39;,e(l),&#39;&amp;content=&#39;,c||&#39;gb2312&#39;,&#39;&amp;pic=&#39;,e(p||&#39;&#39;)].join(&#39;&#39;);function%20a(){if(!window.open([f,p].join(&#39;&#39;),&#39;mb&#39;,[&#39;toolbar=0,status=0,resizable=1,width=440,height=430,left=&#39;,(s.width-440)/2,&#39;,top=&#39;,(s.height-430)/2].join(&#39;&#39;)))u.href=[f,p].join(&#39;&#39;);};if(/Firefox/.test(navigator.userAgent))setTimeout(a,0);else%20a();})(screen,document,encodeURIComponent,&#39;&#39;,&#39;&#39;,&#39;&#39;, &#39;推荐 @Sam_Lau_Dev 的文章《Objective-C编码规范[译]》（ 分享自 @简书 ）&#39;,&#39;https://www.jianshu.com/p/8b76814b3663?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=reader_share&amp;utm_source=weibo&#39;,&#39;页面编码gb2312|utf-8默认gb2312&#39;));&quot;&gt;&lt;i class=&#39;social-icon-sprite social-icon-weibo&#39;&gt;&lt;/i&gt;&lt;span&gt;分享到微博&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
                  
                  &lt;li&gt;&lt;a href=&quot;javascript:void(function(){var d=document,e=encodeURIComponent,r=&#39;http://sns.qzone.qq.com/cgi-bin/qzshare/cgi_qzshare_onekey?url=&#39;+e(&#39;https://www.jianshu.com/p/8b76814b3663?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=reader_share&amp;utm_source=qzone&#39;)+&#39;&amp;title=&#39;+e(&#39;推荐 Sam_Lau 的文章《Objective-C编码规范[译]》&#39;),x=function(){if(!window.open(r,&#39;qzone&#39;,&#39;toolbar=0,resizable=1,scrollbars=yes,status=1,width=600,height=600&#39;))location.href=r};if(/Firefox/.test(navigator.userAgent)){setTimeout(x,0)}else{x()}})();&quot;&gt;&lt;i class=&#39;social-icon-sprite social-icon-zone&#39;&gt;&lt;/i&gt;&lt;span&gt;分享到QQ空间&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
                  &lt;li&gt;&lt;a href=&quot;javascript:void(function(){var d=document,e=encodeURIComponent,r=&#39;https://twitter.com/share?url=&#39;+e(&#39;https://www.jianshu.com/p/8b76814b3663?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=reader_share&amp;utm_source=twitter&#39;)+&#39;&amp;text=&#39;+e(&#39;推荐 Sam_Lau 的文章《Objective-C编码规范[译]》（ 分享自 @jianshucom ）&#39;)+&#39;&amp;related=&#39;+e(&#39;jianshucom&#39;),x=function(){if(!window.open(r,&#39;twitter&#39;,&#39;toolbar=0,resizable=1,scrollbars=yes,status=1,width=600,height=600&#39;))location.href=r};if(/Firefox/.test(navigator.userAgent)){setTimeout(x,0)}else{x()}})();&quot;&gt;&lt;i class=&#39;social-icon-sprite social-icon-twitter&#39;&gt;&lt;/i&gt;&lt;span&gt;分享到Twitter&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
                  &lt;li&gt;&lt;a href=&quot;javascript:void(function(){var d=document,e=encodeURIComponent,r=&#39;https://www.facebook.com/dialog/share?app_id=483126645039390&amp;display=popup&amp;href=https://www.jianshu.com/p/8b76814b3663?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=reader_share&amp;utm_source=facebook&#39;,x=function(){if(!window.open(r,&#39;facebook&#39;,&#39;toolbar=0,resizable=1,scrollbars=yes,status=1,width=450,height=330&#39;))location.href=r};if(/Firefox/.test(navigator.userAgent)){setTimeout(x,0)}else{x()}})();&quot;&gt;&lt;i class=&#39;social-icon-sprite social-icon-facebook&#39;&gt;&lt;/i&gt;&lt;span&gt;分享到Facebook&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
                  &lt;li&gt;&lt;a href=&quot;javascript:void(function(){var d=document,e=encodeURIComponent,r=&#39;https://plus.google.com/share?url=&#39;+e(&#39;https://www.jianshu.com/p/8b76814b3663?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=reader_share&amp;utm_source=google_plus&#39;),x=function(){if(!window.open(r,&#39;google_plus&#39;,&#39;toolbar=0,resizable=1,scrollbars=yes,status=1,width=450,height=330&#39;))location.href=r};if(/Firefox/.test(navigator.userAgent)){setTimeout(x,0)}else{x()}})();&quot;&gt;&lt;i class=&#39;social-icon-sprite social-icon-google&#39;&gt;&lt;/i&gt;&lt;span&gt;分享到Google+&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
                  &lt;li&gt;&lt;a href=&quot;javascript:void(function(){var d=document,e=encodeURIComponent,s1=window.getSelection,s2=d.getSelection,s3=d.selection,s=s1?s1():s2?s2():s3?s3.createRange().text:&#39;&#39;,r=&#39;http://www.douban.com/recommend/?url=&#39;+e(&#39;https://www.jianshu.com/p/8b76814b3663?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=reader_share&amp;utm_source=douban&#39;)+&#39;&amp;title=&#39;+e(&#39;Objective-C编码规范[译]&#39;)+&#39;&amp;sel=&#39;+e(s)+&#39;&amp;v=1&#39;,x=function(){if(!window.open(r,&#39;douban&#39;,&#39;toolbar=0,resizable=1,scrollbars=yes,status=1,width=450,height=330&#39;))location.href=r+&#39;&amp;r=1&#39;};if(/Firefox/.test(navigator.userAgent)){setTimeout(x,0)}else{x()}})()&quot;&gt;&lt;i class=&#39;social-icon-sprite social-icon-douban&#39;&gt;&lt;/i&gt;&lt;span&gt;分享到豆瓣&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
                &lt;/ul&gt;" data-original-title="" title="" class="function-button"><i class="iconfont ic-share"></i></a> <!----></li> <!----></ul></div>
</div>
<div class="note-bottom">
  <div><div class="main"><div class="title">被以下专题收入，发现更多相似内容</div> <!----> <div class="include-collection"><!----> <a href="https://www.jianshu.com/c/NEt52a?utm_source=desktop&amp;utm_medium=notes-included-collection" target="_blank" class="item"><img src="./OC 代码规范_files/computer_guy.jpg"><div class="name">程序员</div></a><a href="https://www.jianshu.com/c/08b19474c52b?utm_source=desktop&amp;utm_medium=notes-included-collection" target="_blank" class="item"><img src="./OC 代码规范_files/Android_Studio_Logo.png"><div class="name">移动测试开发</div></a><a href="https://www.jianshu.com/c/19dbe28002a3?utm_source=desktop&amp;utm_medium=notes-included-collection" target="_blank" class="item"><img src="./OC 代码规范_files/c4409daa19d59b1950bf3bed66a49495.jpg"><div class="name">iOS开发技巧</div></a><a href="https://www.jianshu.com/c/9e0c55c2934a?utm_source=desktop&amp;utm_medium=notes-included-collection" target="_blank" class="item"><img src="./OC 代码规范_files/1429500924.jpg"><div class="name">iOS</div></a><a href="https://www.jianshu.com/c/f5d39621e611?utm_source=desktop&amp;utm_medium=notes-included-collection" target="_blank" class="item"><img src="./OC 代码规范_files/1433150890.jpg"><div class="name">iOS开发</div></a><a href="https://www.jianshu.com/c/0f5e015fc36c?utm_source=desktop&amp;utm_medium=notes-included-collection" target="_blank" class="item"><img src="./OC 代码规范_files/3.png"><div class="name">代码改变世界</div></a><a href="https://www.jianshu.com/c/3233d1a249ca?utm_source=desktop&amp;utm_medium=notes-included-collection" target="_blank" class="item"><img src="./OC 代码规范_files/162902612251cbd95971b82.png"><div class="name">iOS Dev...</div></a> <a class="show-more">
        展开更多
        <i class="iconfont ic-show"></i></a></div></div> <!----> <!----></div>
  <div data-vcomp="recommended-notes" data-note-id="1530647"></div>
  <!-- 相关文章 -->
  <div class="seo-recommended-notes">

        <div class="note ">
                    <a class="title" target="_blank" href="https://www.jianshu.com/p/b6434c2997d1?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=seo_notes&amp;utm_source=recommendation">翻译－苹果官方文档《Objective-C语言编程》(Programming with Obj...</a>
          <p class="description">苹果官方文档翻译 《Objective-C语言编程》(Programming with Objective-C) https://developer.apple.com/library/ios/documentation/Cocoa/Conceptual/Programmi...</p>
          <a class="author" target="_blank" href="https://www.jianshu.com/u/fc23ad04f4a1?utm_campaign=maleskine&amp;utm_content=user&amp;utm_medium=seo_notes&amp;utm_source=recommendation">
            <div class="avatar">
              <img src="./OC 代码规范_files/74b11548418c" alt="48">
            </div>
            <span class="name">fever105</span>
</a>        </div>

        <div class="note ">
                    <a class="title" target="_blank" href="https://www.jianshu.com/p/20bae386ab56?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=seo_notes&amp;utm_source=recommendation">Objective-C编码规范：26个方面解决iOS开发问题</a>
          <p class="description">转载Objective-C编码规范 程序员头条 2015-07-09 16:53:238807浏览0评论分享到  小字号 IT程序狮 Web前端工程师 汇聚、分享优秀的IT技术资讯、文章。欢迎关注！^_^ 377篇手记 426推荐 作者的热门手记 12 个免费学习编程的好地...</p>
          <a class="author" target="_blank" href="https://www.jianshu.com/u/9dded4ab5b18?utm_campaign=maleskine&amp;utm_content=user&amp;utm_medium=seo_notes&amp;utm_source=recommendation">
            <div class="avatar">
              <img src="./OC 代码规范_files/1-04bbeead395d74921af6a4e8214b4f61.jpg" alt="48">
            </div>
            <span class="name">一片枫叶随风舞</span>
</a>        </div>

        <div class="note ">
                    <a class="title" target="_blank" href="https://www.jianshu.com/p/a220f531d618?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=seo_notes&amp;utm_source=recommendation">Objective-C style guide[编码规范]</a>
          <p class="description">原文链接：The official raywenderlich.com Objective-C style guide原文作者：raywenderlich.com Team译文出自：raywenderlich.com Objective-C编码规范译者：huazhume 前...</p>
          <a class="author" target="_blank" href="https://www.jianshu.com/u/12c94c228f28?utm_campaign=maleskine&amp;utm_content=user&amp;utm_medium=seo_notes&amp;utm_source=recommendation">
            <div class="avatar">
              <img src="./OC 代码规范_files/20ffe612-8876-4d6c-be07-2cd02cd1598a.jpg" alt="48">
            </div>
            <span class="name">张小白_</span>
</a>        </div>

        <div class="note ">
                    <a class="title" target="_blank" href="https://www.jianshu.com/p/4da702137679?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=seo_notes&amp;utm_source=recommendation">Google的Objective-C编码规范 </a>
          <p class="description">Google的Objective-C编码规范 总览 背景知识     Objective-C是一个C语言的扩展语言，非常动态，非常的“面向对象”，它被设计成既拥有复杂的面向对象设计理念又可以轻松使用与阅读的语言，也是Mac OS X和iPhone开发的首选语言。    Co...</p>
          <a class="author" target="_blank" href="https://www.jianshu.com/u/2f61d6cf70d1?utm_campaign=maleskine&amp;utm_content=user&amp;utm_medium=seo_notes&amp;utm_source=recommendation">
            <div class="avatar">
              <img src="./OC 代码规范_files/7554ebcc-b639-4000-aace-4cdf8cd8ae2f.jpg" alt="48">
            </div>
            <span class="name">渣渣程序猿爱次次大餐</span>
</a>        </div>

        <div class="note ">
                    <a class="title" target="_blank" href="https://www.jianshu.com/p/e2c0e3ba79d3?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=seo_notes&amp;utm_source=recommendation">【转】Objective-C编码规范</a>
          <p class="description">这篇编码风格指南概括了 http://raywenderlich.com 的编码规范，可能有些删减或修改。 介绍 我们制定Objective-C编码规范的原因是我们能够在我们的书，教程和初学者工具包的代码保持优雅和一致。即使我们有很多不同的作者来完成不同的书籍。 这里编码规...</p>
          <a class="author" target="_blank" href="https://www.jianshu.com/u/e579d035aefd?utm_campaign=maleskine&amp;utm_content=user&amp;utm_medium=seo_notes&amp;utm_source=recommendation">
            <div class="avatar">
              <img src="./OC 代码规范_files/546f8b7d-dfdb-4893-8ba3-40a3e222a899.jpg" alt="48">
            </div>
            <span class="name">Keizo</span>
</a>        </div>

        <div class="note have-img">
          <a class="cover" target="_blank" href="https://www.jianshu.com/p/0c4288194919?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=seo_notes&amp;utm_source=recommendation">
            <img src="./OC 代码规范_files/2868711-00fa8d9d7b888aec.jpg" alt="240">
</a>          <a class="title" target="_blank" href="https://www.jianshu.com/p/0c4288194919?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=seo_notes&amp;utm_source=recommendation">最后让你蜕变的也许恰恰是那些看起来没用的东西</a>
          <p class="description">文/撒哈拉的星空     01    其实，我们并不知道一些东西会在什么时候帮助到我们。而在我们的生活中，又有哪些东西会产生作用。    譬如，你在做一件事，初期并没有什么效果。你就开始质疑它，质疑你自己。恰恰这次才是阻碍你的地方，而不是事件本身。    就算是一个产品，它...</p>
          <a class="author" target="_blank" href="https://www.jianshu.com/u/415a03ef2cf0?utm_campaign=maleskine&amp;utm_content=user&amp;utm_medium=seo_notes&amp;utm_source=recommendation">
            <div class="avatar">
              <img src="./OC 代码规范_files/36fbf1fd82c7.jpeg" alt="48">
            </div>
            <span class="name">撒哈拉的星空</span>
</a>        </div>

        <div class="note ">
                    <a class="title" target="_blank" href="https://www.jianshu.com/p/561b91553a5e?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=seo_notes&amp;utm_source=recommendation">2017-11-18</a>
          <p class="description">知天地之长而吾所历者短，则遇横逆之来，当小忍以待定。知地之大而吾所居者小，则遇荣利争夺之境，当退让以守其雌。</p>
          <a class="author" target="_blank" href="https://www.jianshu.com/u/806e50f0a6d4?utm_campaign=maleskine&amp;utm_content=user&amp;utm_medium=seo_notes&amp;utm_source=recommendation">
            <div class="avatar">
              <img src="./OC 代码规范_files/02f876ff-c8ff-4544-a4ad-d26fff78b4e5.jpg" alt="48">
            </div>
            <span class="name">新家中男孩</span>
</a>        </div>

        <div class="note have-img">
          <a class="cover" target="_blank" href="https://www.jianshu.com/p/f7a1efb27d4c?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=seo_notes&amp;utm_source=recommendation">
            <img src="./OC 代码规范_files/2359621-c93e7a004e57b8b7.JPG" alt="240">
</a>          <a class="title" target="_blank" href="https://www.jianshu.com/p/f7a1efb27d4c?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=seo_notes&amp;utm_source=recommendation">疯子</a>
          <p class="description">在黑夜里撒泼 头在摇摆 手在挥舞 脚在蹦跳 看！那里有一个疯子！ 在游戏单机中 打这阻碍的破墙 摔这离调的情歌 砸这残败的风景 看什么！没见过发疯？ 在黎明前嘶吼 别问我疯狂为什么 别问我孤独想什么 别问我自由是什么 别看了.我不是疯子.</p>
          <a class="author" target="_blank" href="https://www.jianshu.com/u/bd07d01529eb?utm_campaign=maleskine&amp;utm_content=user&amp;utm_medium=seo_notes&amp;utm_source=recommendation">
            <div class="avatar">
              <img src="./OC 代码规范_files/17881d1df974.jpg" alt="48">
            </div>
            <span class="name">小和尚不念经</span>
</a>        </div>

        <div class="note ">
                    <a class="title" target="_blank" href="https://www.jianshu.com/p/3ecfff7893f5?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=seo_notes&amp;utm_source=recommendation">快乐的往事</a>
          <p class="description">看到这个题目时，我浮想连篇，酸甜苦辣，喜怒哀乐，交织成我有情有趣，五彩缤纷的童年，但更多的是快乐，记忆中的那抹快乐，一直令我记忆犹新。 五岁时，我听到隔壁王奶奶对她孙子说:“阿宝，吃西瓜时，不能把西瓜子也吃进去，否则，头上就得长西瓜了……”听到这里，我眼前一亮:我平时最爱吃...</p>
          <a class="author" target="_blank" href="https://www.jianshu.com/u/5c4261deeebb?utm_campaign=maleskine&amp;utm_content=user&amp;utm_medium=seo_notes&amp;utm_source=recommendation">
            <div class="avatar">
              <img src="./OC 代码规范_files/77bd77e5e520" alt="48">
            </div>
            <span class="name">沈丹妮</span>
</a>        </div>

        <div class="note ">
                    <a class="title" target="_blank" href="https://www.jianshu.com/p/38ef590e806d?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=seo_notes&amp;utm_source=recommendation">2017年9月26日</a>
          <p class="description">我今天对一个胖、不美、说话不利索的女的态度不太好，应该反省。但反省之余，也觉得，不能再随心所欲地吃了，不能再懒得动了，要变瘦，要变美。起码会被世界耐心一点对待。 凉风肃肃，我觉得2017年的秋天今天来了。去年的秋天降临的时候我也记得很清楚。那天是9月4日，我还between...</p>
          <a class="author" target="_blank" href="https://www.jianshu.com/u/772bbebae99b?utm_campaign=maleskine&amp;utm_content=user&amp;utm_medium=seo_notes&amp;utm_source=recommendation">
            <div class="avatar">
              <img src="./OC 代码规范_files/d5e2e4f0-f18c-4b54-a6cc-8570301bbcf7.jpg" alt="48">
            </div>
            <span class="name">饭小写</span>
</a>        </div>
  </div>
</div>

    <script type="application/json" data-name="page-data">{"user_signed_in":false,"locale":"zh-CN","os":"mac","read_mode":"day","read_font":"font2","note_show":{"is_author":false,"is_following_author":false,"is_liked_note":false,"follow_state":0,"uuid":"493fa483-795d-4c98-b13b-0eac3a72dba3"},"note":{"id":1530647,"slug":"8b76814b3663","user_id":166109,"notebook_id":342298,"commentable":true,"likes_count":158,"views_count":30597,"public_wordage":3568,"comments_count":16,"featured_comments_count":0,"total_rewards_count":0,"is_author":false,"paid_type":"free","paid":false,"paid_content_accessible":false,"author":{"nickname":"Sam_Lau","total_wordage":47068,"followers_count":3330,"total_likes_count":2506}}}</script>
    
    <script src="./OC 代码规范_files/babel-polyfill-6cd2d6b53fe3184b71cc.js" crossorigin="anonymous"></script>
    <script src="./OC 代码规范_files/web-base-5f863f13691adf154850.js" crossorigin="anonymous"></script>
<script src="./OC 代码规范_files/web-889592c0f63fcfb26f33.js" crossorigin="anonymous"></script>
    
    <script src="./OC 代码规范_files/entry-429c4cb17e5e3fb38b55.js" crossorigin="anonymous"></script>
    <script>
  (function(){
      var bp = document.createElement('script');
      var curProtocol = window.location.protocol.split(':')[0];
      if (curProtocol === 'https') {
          bp.src = 'https://zz.bdstatic.com/linksubmit/push.js';
      }
      else {
          bp.src = 'http://push.zhanzhang.baidu.com/push.js';
      }
      var s = document.getElementsByTagName("script")[0];
      s.parentNode.insertBefore(bp, s);
  })();
</script>

  

<!----><!----></body></html>