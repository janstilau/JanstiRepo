/*
 环信开发文档
 http://docs.easemob.com/im/start

 
 APP 服务器与环信服务器的集成
 环信只是即时通讯的消息通道。环信本身不提供用户体系，环信既不保存任何 APP 业务数据，也不保存任何 APP 的用户信息。比如说，你的 APP 是一个婚恋交友 APP，那么你的 APP 用户的头像、昵称、身高、体重、三围、电话号码等信息是保存在你自己的 APP 业务服务器上，这些信息不需要告诉环信，环信也不想知道。
 
 环信这样设计的目的有2个：
 
 尽量少的侵入开发者自己 APP 的业务数据和用户体系。用户体系是一个 APP 的最最核心的数据，在当前中国的环境下，部分开发者会比较难信赖一个第三方厂商，把自己最关键的用户体系信息托管到一个第三方平台上。
 大多数 APP 都有自己的服务器后台，有自己的用户体系。所以环信要尽力做好的环节是尽可能方便开发者把环信和自己的用户体系集成，而不是为开发者提供他们可能并不会用的用户体系。
 
 要使用环信，只需要为每一个 APP 用户创建一个环信账号。创建环信账号仅需要以下信息：

 {
 username: "jliu",  //username是第三方用户体系中的primarykey。需要在AppKey的范围内唯一。
 password:"123456" //密码。为保证第三方用户体系中的账号密码不必要的泄露给环信，建议对第三方用户体系的账号密码做一次hash算法。然后在手机端登录环信时，客户端同样使用hash后的密码登录。
 }

 APP 创建新用户时创建环信账号
 
 为保证安全，强烈建议只在服务器端调用创建环信账号的 REST 方法。具体方法见用户管理 REST API。即每次当APP客户端调用APP自己的业务后台创建新用户时，也在环信上为该 APP 用户创建一个环信账号。
 通常的做法是在自己 APP 创建用户成功后调用创建环信账号的 REST 方法来创建环信账号。因为这个方法是服务器对服务器的调用，所以因为网络不稳定原因失败的可能很小。但开发者仍旧需要对该方法的返回结果做处理，如果该方法失败，应该做个 retry，如果仍旧失败，应该回滚在自己 APP 创建用户的操作。否则会导致 APP 的用户账号和环信账号不一致的问题。
 
 APP 删除用户时删除环信账号
 
 为保证安全，强烈建议只在服务器端调用删除环信账号的 REST 方法。具体方法见用户管理 REST API。即每次当APP客户端调用APP自己的业务后台删除新用户时，也在环信上将该 APP 用户对应的环信账号删除。
 
 APP 修改用户密码时更新环信账号的密码
 
 为保证安全，强烈建议只在服务器端调用修改环信账号密码的 REST 方法。具体方法见用户管理 REST API。即每次当 APP 用户的密码被修改时，也要更新该 APP 用户对应的环信账号的密码。
 
 好友体系集成
 
 所谓好友体系，是指谁是谁的好友的关系体系。环信提供好友体系，但不是必须使用的，仅在需要控制消息发送权限时才启动。
 
 比如对一个企业内部移动办公 APP 来说，因为企业内部同事是彼此认识的，那么此 APP 可能是不需要消息发送权限控制的。即任何人都可以给任何人发消息。
 
 但一个交友类的 APP 就必须要控制只有我的好友才能给我发消息，不是我的好友的人需要向我发送加好友邀请，我批准后才能给我发消息。这种情况下，就需要启用环信提供的好友体系。
 
 
 通信过程及聊天记录保存
 
 在线状态：客户端A发送消息到环信服务器，环信服务器推送消息到客户端B。
 离线状态：客户端A发送消息到环信服务器，环信服务器检测到客户端B不在线，会添加到离线缓存中，当客户端B登录后服务器会把离线消息推送给客户端B。
 
 
 客户端A发送消息到环信服务器的同时，SDK 会保存这条消息到本地数据库（SDK 内部创建数据库，不允许直接操作），环信服务器在推送消息到客户端B的同时也会在服务器记录下来（消息历史记录免费存储3天），客户端B收到消息后，SDK 会将这条消息存储到本地数据库。
 
 注：客户端并未提供去服务器获取聊天记录的接口，所以，如果换了设备或者清空了数据，聊天记录都不会存在。如果有需求要从服务器拉取聊天记录，可以在自己服务器处理。
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
*/
